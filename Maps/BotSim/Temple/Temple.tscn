[gd_scene load_steps=26 format=3 uid="uid://bgk0mejwh02ln"]

[ext_resource type="PackedScene" uid="uid://cktnv6xx6yxxn" path="res://Maps/BotSim/BotSimLevel.tscn" id="1_ov5jx"]
[ext_resource type="VoxelGIData" uid="uid://bftyiwg0vwdwk" path="res://Maps/BotSim/Temple/Temple.VoxelGI_data.res" id="2_2cypd"]
[ext_resource type="PackedScene" uid="uid://o2h1ckasd2vt" path="res://Maps/BotSim/Temple/TempleBase.tscn" id="2_dg5rw"]
[ext_resource type="Environment" uid="uid://d3ucr2cqu80q2" path="res://Maps/BotSim/Temple/TempleEnv.tres" id="2_ocyhd"]
[ext_resource type="PackedScene" uid="uid://csaruiackbvkq" path="res://Props/PickUps/WeaponPickUp.tscn" id="3_36e2o"]
[ext_resource type="PackedScene" uid="uid://ho0xjys0mcbb" path="res://Props/PickUps/HealthPickUp.tscn" id="4_f0cib"]
[ext_resource type="PackedScene" uid="uid://cykhq31st78s1" path="res://Maps/BotSim/Temple/Assets/Props/Goddess/Goddess.blend" id="5_r73wd"]
[ext_resource type="Material" uid="uid://bi48kknnwrqgf" path="res://Maps/BotSim/Temple/Assets/Materials/GoddessMat.tres" id="6_suoll"]
[ext_resource type="AudioStream" uid="uid://cukakob2orkkd" path="res://Maps/Audio/Music/TheHolyTemple.ogg" id="7_ar8yn"]
[ext_resource type="Script" path="res://Maps/BotSim/Temple/Assets/Props/Goddess/Static.gd" id="8_0k2kh"]
[ext_resource type="AudioStream" uid="uid://juys58xkyd7q" path="res://Maps/BotSim/Temple/Assets/SFX/LargeStatic.ogg" id="8_f8epm"]

[sub_resource type="FastNoiseLite" id="FastNoiseLite_o8tdu"]
noise_type = 2
frequency = 0.0089

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_y40c8"]
seamless = true
noise = SubResource("FastNoiseLite_o8tdu")

[sub_resource type="NavigationMesh" id="NavigationMesh_xuj3b"]
vertices = PackedVector3Array(5.62691, 5.19593, -37.75, 1.62691, 5.19593, -41.75, -1.62309, 5.19593, -41.75, -5.62309, 5.19593, -37.75, -5.37309, 5.19593, -33.75, 5.37691, 5.19593, -33.75, -2.68559, 5.35593, -33.75, -17.3731, 10.7959, -27.75, -17.3731, 10.7959, -28.5, -18.1231, 10.7959, -29, -18.6231, 10.7959, -27.25, -26.3731, 10.7959, -28, -22.8731, 10.7959, -27.25, -21.3731, 10.7959, -27.25, -18.1231, 10.7959, -30.5, -20.6231, 10.7959, -26.25, -19.3731, 10.7959, -26.25, -15.8731, 10.7959, -31.25, -14.8731, 10.7959, -30.5, -13.6231, 10.7959, -31.75, -25.3731, 10.7959, -26.5, -23.3731, 10.7959, -26.5, -27.1231, 10.7959, -37, -27.1231, 10.7959, -28, -26.3731, 10.7959, -37, -17.3731, 10.7959, -31.25, -14.6231, 10.7959, -38.25, -14.6231, 10.7959, -39.25, -24.8731, 10.7959, -38.5, -13.6231, 10.7959, -37.25, -24.8731, 10.7959, -39.25, 1.87691, 17.0359, -36.5, 2.62691, 17.0359, -38.25, 2.12691, 17.3559, -39.25, -2.12309, 17.3559, -39.25, -1.87309, 17.0359, -36.5, -0.373087, 17.1959, -36, 0.751913, 17.1959, -36.25, 2.25191, 17.1959, -37.375, 0.710245, 17.6759, -39.25, -0.148087, 17.6759, -38.025, -2.62309, 17.0359, -38.5, 14.8769, 10.7959, -30.5, 15.6269, 10.7959, -30.5, 16.3769, 10.7959, -31.5, 13.6269, 10.7959, -31.75, 18.1269, 10.7959, -29, 17.3769, 10.7959, -28, 18.8769, 10.7959, -26.75, 14.8769, 10.7959, -39.25, 14.8769, 10.7959, -38.25, 17.6269, 10.7959, -31.5, 25.3769, 10.7959, -37.75, 25.3769, 10.7959, -39.25, 13.6269, 10.7959, -37.25, 18.3769, 10.7959, -30.75, 25.1269, 10.7959, -26.5, 26.1269, 10.7959, -28, 18.8769, 10.7959, -26.25, 26.1269, 10.7959, -37, 27.1269, 10.7959, -28, 27.1269, 10.7959, -37, -13.3731, 5.19593, -36.25, -12.6231, 5.35593, -36.25, -12.6231, 5.35593, -36.75, -13.8731, 5.19593, -37, -21.1231, 5.19593, -27.25, -18.1231, 5.19593, -27.25, -18.3731, 5.19593, -30.5, -25.8731, 5.19593, -27.5, -20.3731, 5.19593, -25.75, -19.3731, 5.19593, -25.75, -19.3731, 5.19593, -26.5, -20.3731, 5.19593, -26.5, -17.6231, 5.19593, -31.25, -14.3731, 5.19593, -31.25, -14.1231, 5.19593, -35.5, -14.3731, 5.19593, -37.75, -25.8731, 5.19593, -37.5, -11.6231, 5.19593, -36.25, -11.6231, 5.19593, -36.75, -10.8731, 5.19593, -30.5, -10.1231, 5.19593, -29.75, -6.12309, 5.19593, -32.25, -6.12309, 5.19593, -33.25, -10.8731, 5.19593, -35.5, -10.8731, 5.19593, -37.75, -3.87309, 4.07593, -29.75, -3.87309, 4.07593, -31.75, -5.62309, 5.19593, -31.75, -6.37309, 5.35593, -29.75, 11.6269, 5.19593, -36.25, 12.6269, 5.35593, -36.25, 12.6269, 5.35593, -36.75, 11.6269, 5.19593, -36.75, 6.12691, 5.19593, -32.25, 10.1269, 5.19593, -29.75, 10.8769, 5.19593, -30.5, 10.8769, 5.19593, -35.5, 6.12691, 5.19593, -33.25, 10.8769, 5.19593, -37.75, 5.62691, 5.19593, -31.75, 3.87691, 4.07593, -31.75, 3.87691, 4.07593, -29.75, 6.37691, 5.35593, -29.75, 13.3769, 5.19593, -36.25, 13.3769, 5.19593, -36.75, 19.1269, 5.19593, -30.5, 19.1269, 5.19593, -29.5, 21.3769, 5.19593, -27.25, 25.8769, 5.19593, -27.25, 19.3769, 5.19593, -26.5, 19.3769, 5.19593, -25.75, 20.6269, 5.19593, -25.75, 20.6269, 5.19593, -26.5, 14.1269, 5.19593, -37.75, 14.1269, 5.19593, -35.5, 17.3769, 5.19593, -32, 25.8769, 5.19593, -37.75, 18.1269, 5.51593, -29, 18.1269, 5.51593, -27.25, 16.3769, 5.19593, -32, 14.1269, 5.19593, -31.25, 15.8769, 5.19593, -31.25, -4.87309, 25.1959, -30.5, 5.12691, 25.1959, -30.75, 5.12691, 25.1959, -35.25, -5.12309, 25.1959, -35.25, 1.87691, 2.79593, -29.75, -1.87309, 2.79593, -29.75, -1.87309, 2.79593, -27.75, -4.12309, 1.51593, -27.75, -4.12309, 1.67593, -25.75, 4.12691, 1.51593, -25.75, 4.12691, 1.51593, -27.75, 1.87691, 2.79593, -27.75, 2.58525, 3.11593, -31.75, 1.29358, 2.79593, -31.75, -1.28975, 2.79593, -31.75, -2.58142, 3.11593, -31.75, -2.74809, 2.47593, -25.75, -1.37309, 2.79593, -25.75, 1.37691, 2.79593, -25.75, 1.37691, 2.79593, -28.25, -1.37309, 2.79593, -28.25, -5.12309, 0.235931, -22.5, -4.12309, 0.235931, -22.5, -4.12309, 0.235931, -23.75, -6.12309, 0.235931, -23.75, -6.62309, 0.235931, -25.25, -6.12309, 0.395931, -25.75, -10.8731, 0.235931, -27.75, -6.37309, 0.235931, -21, -5.47309, 0.555931, -27.75, -6.82309, 0.235931, -27.75, -10.8731, 0.235931, -21, 4.12691, 0.235931, -23.75, 4.12691, 0.235931, -22.5, 5.12691, 0.235931, -22.5, 6.12691, 0.235931, -23.75, 10.8769, 0.235931, -27.75, 6.12691, 0.395931, -25.75, 6.62691, 0.235931, -25.25, 6.37691, 0.235931, -21, 6.82691, 0.235931, -27.75, 5.47691, 0.555931, -27.75, 10.8769, 0.235931, -21, -20.3731, 5.19593, -25, -20.8731, 5.19593, -24.75, -20.8731, 5.19593, -19.5, -19.1231, 5.19593, -17.25, -27.6231, 5.19593, -10, -26.3731, 5.19593, -10, -26.1231, 5.19593, -16.5, -27.8731, 5.19593, -18.5, -21.6231, 5.19593, -18.75, -25.3731, 5.19593, -17.25, -8.87309, 21.1959, -25, -9.62309, 21.1959, -25.75, -9.62309, 21.1959, -24.5, -2.37309, 21.1959, -24.5, -2.37309, 21.1959, -25, 9.62691, 21.1959, -24.5, 9.62691, 21.1959, -25.75, 8.87691, 21.1959, -25, 2.37691, 21.1959, -24.5, 2.37691, 21.1959, -25, 27.1269, 5.35593, -18, 27.8769, 5.83593, -18.75, 21.6269, 5.19593, -18.75, 26.6269, 5.19593, -18.75, 27.1269, 5.19593, -17, 25.3769, 5.19593, -17.25, 20.8769, 5.19593, -19.5, 19.1269, 5.51593, -17.25, 19.1686, 5.19593, -18.6667, 26.1269, 5.19593, -16.5, 26.1269, 5.19593, -9.25, 27.6269, 5.19593, -9.25, 27.8769, 5.19593, -16.5, 20.3769, 5.19593, -17.25, -22.3731, 9.67593, -19.5, -23.8731, 9.67593, -19.5, -23.8731, 9.67593, -16.5, -19.6231, 9.67593, -16.5, -21.6231, 9.67593, -20.25, -18.3731, 9.67593, -17.5, -18.3731, 9.67593, -24.25, -21.6231, 9.67593, -24.25, 23.6269, 9.67593, -16.5, 23.6269, 9.67593, -19.5, 22.3769, 9.67593, -19.5, 21.6269, 9.67593, -20.25, 18.3769, 9.67593, -16.25, 21.6269, 9.67593, -24.25, 18.3769, 9.67593, -24.25, -2.87309, 0.235931, -17.5, -4.12309, 0.235931, -17.5, -4.12309, 0.235931, -16.25, -1.12309, 0.235931, -16.25, 4.12691, 0.235931, -16.25, 4.12691, 0.235931, -17.5, 2.87691, 0.235931, -17.5, 1.12691, 0.235931, -16.25, 2.87691, 0.235931, -22.5, -2.87309, 0.235931, -22.5, -0.373087, 0.235931, -15.5, -0.373087, 0.235931, -13.5, 0.376913, 0.235931, -13.5, 0.376913, 0.235931, -15.5, -1.62309, 0.235931, -21.25, 1.62691, 0.235931, -21.25, -1.62309, 0.235931, -18.75, 1.62691, 0.235931, -18.75, -5.12309, 0.235931, -17.5, -6.37309, 0.235931, -18.75, -10.8731, 0.235931, -16.25, 5.12691, 0.235931, -17.5, 6.37691, 0.235931, -18.75, 10.8769, 0.235931, -16.25, 24.6269, 9.67593, -16.5, 25.3769, 9.83593, -11.75, 27.6269, 9.67593, -11.5, 28.3769, 9.67593, -12.75, 25.3769, 9.83593, -15.75, 29.1269, 9.83593, -12.75, 29.1269, 9.67593, -19.5, -27.8731, 9.67593, -12.25, -27.3731, 9.67593, -11.5, -25.3731, 9.67593, -11.5, -25.3731, 9.67593, -15.75, -24.6231, 9.67593, -16.5, -27.1231, 9.67593, -19.5, -28.3731, 9.67593, -18, -29.1231, 9.67593, -18, -29.1231, 9.67593, -12.25, -3.87309, 0.235931, -4, -2.62309, 0.235931, -4, -2.62309, 0.235931, -5, 2.62691, 0.235931, -5, 2.62691, 0.235931, -4, 3.87691, 0.235931, -4, 0.376913, 0.235931, -11.5, -0.373087, 0.235931, -11.5, 1.12691, 0.235931, -6.5, 3.87691, 0.235931, -10.75, 1.12691, 0.235931, -10.75, -1.12309, 0.235931, -10.75, -1.12309, 0.235931, -6.5, -3.87309, 0.235931, -10.75, -5.12309, 6.31593, -7.5, -4.37309, 6.31593, -7.5, -4.37309, 6.31593, -9.75, -5.12309, 6.31593, -11.25, -3.62309, 6.31593, -10.5, 3.62691, 6.31593, -10.5, 5.12691, 6.31593, -11.25, 4.37691, 6.31593, -9.75, 4.37691, 6.31593, -7.5, 5.12691, 6.31593, -7.5, -26.3731, 5.19593, -9.25, -25.6231, 5.19593, -8.5, -27.8731, 5.19593, -3.25, -25.8731, 5.19593, -5.25, -25.1231, 5.19593, -7, -25.4981, 5.35593, -6.125, -16.3731, 0.235931, -6.25, -16.6231, 0.235931, -5, -14.1231, 0.235931, -4.75, -25.8731, 5.19593, -3.25, -25.8731, 5.35593, -4.25, -14.1231, 0.235931, -8.75, -16.8731, 0.395931, -6.75, -16.9981, 0.395931, -8.6875, -19.8731, 1.99593, -8.625, -24.1856, 4.87593, -8.53125, -29.1231, 11.4359, -3.25, -24.6231, 11.4359, -3.25, -23.3731, 11.4359, -4.5, -23.3731, 11.4359, -9.5, -29.1231, 11.4359, -9.5, -19.8731, 11.4359, -4.5, -19.1231, 11.4359, -3.5, -18.1231, 11.4359, -4.5, -14.8731, 11.4359, -9.5, -14.3731, 11.4359, -4.5, -13.3731, 11.4359, -3.5, -13.3731, 11.4359, -8.5, -14.1231, 11.4359, -8.5, 18.1269, 11.4359, -4.5, 18.8769, 11.4359, -3.5, 19.8769, 11.4359, -4.5, 13.3769, 11.4359, -8, 13.3769, 11.4359, -3.5, 14.3769, 11.4359, -4.5, 14.6269, 11.4359, -8.75, 23.3769, 11.4359, -4.5, 23.3769, 11.4359, -9.5, 14.6269, 11.4359, -9.5, 23.8769, 11.4359, -4.25, 29.1269, 11.4359, -4.25, 29.1269, 11.4359, -9.5, 25.6269, 5.19593, -8.75, 25.8769, 5.35593, -6, 27.8769, 5.19593, -4, 14.1269, 0.235931, -4.75, 16.6269, 0.235931, -5, 16.3769, 0.235931, -6.25, 25.8769, 5.35593, -4, 22.1269, 3.59593, -7.5, 22.6269, 4.07593, -6.75, 25.1269, 5.35593, -6.75, 24.4602, 5.03593, -8.33333, 14.3769, 0.395931, -8.75, 16.8769, 0.395931, -6.75, 21.1269, 2.95593, -7.5, 24.5019, 5.03593, -8.4375, 20.6269, 2.79593, -6.75, 18.2936, 1.03593, -7, 24.2207, 4.87593, -8.75, 17.1894, 0.395931, -8.75, 4.37691, 6.31593, -6.5, 5.12691, 6.31593, -3.5, -4.37309, 6.31593, -6.5, -5.12309, 6.31593, -3.5, -8.87309, 6.31593, 7.5, -8.87309, 6.31593, 6.75, -10.1231, 6.31593, 6.75, -11.3731, 6.31593, 7.5, 10.1269, 6.31593, 6.75, 8.87691, 6.31593, 6.75, 8.87691, 6.31593, 7.5, 11.3769, 6.31593, 7.5, -11.3731, 6.31593, -2.75, -10.8731, 6.31593, 6, -10.8731, 6.31593, -1.25, 10.1269, 6.31593, -2, 10.8769, 6.31593, -1.25, 11.3769, 6.31593, -2.75, 10.8769, 6.31593, 6, -7.12309, 6.31593, -1.25, -7.12309, 6.31593, 0.25, -4.37309, 6.31593, 0, -4.37309, 6.31593, -1.75, -3.62309, 6.31593, -2.5, -5.87309, 6.31593, -2.75, 4.37691, 6.31593, 0, 7.12691, 6.31593, 0.25, 7.12691, 6.31593, -1.25, 4.37691, 6.31593, -1.75, 3.62691, 6.31593, -2.5, 5.87691, 6.31593, -2.75, 3.62691, 6.31593, -5.75, 7.87691, 6.31593, -2, -3.62309, 6.31593, -5.75, -7.87309, 6.31593, -2, -10.1231, 6.31593, -2, -13.3731, 0.235931, -0.25, -12.6231, 0.235931, -0.25, -12.6231, 0.235931, -0.75, -13.3731, 0.235931, -0.75, -18.8731, 0.235931, -4.75, -17.8731, 0.235931, -1.5, -16.6231, 0.235931, -0.25, -14.1231, 0.235931, -1.5, -14.1231, 0.235931, 0.5, -16.6231, 0.235931, 2.25, -17.8731, 0.235931, 3.5, -18.8731, 0.235931, 6.5, -14.1231, 0.235931, 6.75, -18.8731, 0.235931, 3.5, -18.8731, 0.235931, -1.5, 13.3769, 0.235931, -0.75, 12.6269, 0.235931, -0.75, 12.6269, 0.235931, -0.25, 13.3769, 0.235931, -0.25, 21.3769, 0.235931, -0.25, 23.3769, 0.235931, -0.5, 23.3769, 0.235931, -1.75, 20.1269, 0.235931, -1.5, 14.1269, 0.235931, -1.5, 14.1269, 0.235931, 0.5, 16.6269, 0.235931, -0.25, 14.1269, 0.235931, 1.25, 16.6269, 0.235931, 1.25, 23.8769, 0.235931, 1.75, 23.8769, 0.235931, -0.25, 21.3769, 0.235931, 1, 17.8769, 0.235931, -1.5, 23.8769, 0.235931, -2, 23.6269, 0.555931, -5, 22.3719, 0.235931, -3.50303, -20.1231, 0.235931, 3.5, -20.1231, 0.235931, -1.5, -21.3731, 0.235931, 2.25, -23.8731, 0.235931, 6.75, -23.8731, 0.235931, -4.75, -21.3731, 0.235931, -0.25, 24.3769, 11.4359, 0.25, 23.6269, 11.4359, 1.25, 24.3769, 11.4359, 1.75, 24.6269, 11.4359, 4.25, 24.3769, 11.4359, -3.75, 29.1269, 11.4359, 4.25, -3.87309, 0.235931, 3.75, -2.62309, 0.235931, 4, -2.62309, 0.235931, 3, 2.62691, 0.235931, 3, 2.62691, 0.235931, 4, 3.87691, 0.235931, 3.75, 2.62691, 0.235931, -3, -2.62309, 0.235931, -3, -1.12309, 0.235931, 1.5, -1.12309, 0.235931, -1.5, 1.12691, 0.235931, 1.5, 1.12691, 0.235931, -1.5, 24.8769, 5.35593, 8.75, 18.6269, 5.35593, 8.75, 18.6269, 5.19593, 10.75, 27.8769, 5.19593, 10.75, 25.6269, 5.35593, 8, 26.1269, 0.715931, -4, 26.3769, 0.395931, -1.75, 26.8769, 0.395931, -2.75, -24.3731, 11.4359, 1.75, -23.6231, 11.4359, 0.75, -24.3731, 11.4359, 0.25, -24.6231, 11.4359, 4.25, -29.1231, 11.4359, 4.25, -18.6231, 5.19593, 10.75, -18.6231, 5.35593, 8.75, -25.1231, 5.35593, 8.75, -27.8731, 5.19593, 10.5, -25.8731, 5.35593, 8, -11.6231, 0.235931, -0.25, -11.6231, 0.235931, -0.75, -10.8731, 0.235931, 0.5, -10.8731, 0.235931, 6.75, -7.12309, 0.235931, 4.5, -7.12309, 0.235931, -1.75, -6.37309, 0.235931, 5.75, -5.37309, 0.235931, 5.75, -5.37309, 0.235931, 5.25, -6.37309, 0.235931, 5.25, -10.8731, 0.235931, -1.75, -7.12309, 0.235931, 6.75, 5.37691, 0.235931, 5.25, 5.37691, 0.235931, 5.75, 6.37691, 0.235931, 5.75, 6.37691, 0.235931, 5.25, 10.8769, 0.235931, 0.5, 7.12691, 0.235931, -1.75, 7.12691, 0.235931, 4.5, 10.8769, 0.235931, 6.75, 11.6269, 0.235931, -0.25, 11.6269, 0.235931, -0.75, 7.12691, 0.235931, 6.75, 10.8769, 0.235931, -1.75, -21.3731, 11.4359, 0.75, -22.3731, 11.4359, 0.75, -21.3731, 11.4359, 1, -20.6231, 11.4359, -0.5, -19.8731, 11.4359, -0.5, -18.1231, 11.4359, -0.25, -18.8731, 11.4359, -1.5, -16.8731, 11.4359, 1.25, -15.6231, 11.4359, 1.25, -17.6231, 11.4359, 2.5, -19.1231, 11.4359, 3.5, 21.3769, 11.4359, 1, 22.3769, 11.4359, 1, 21.3769, 11.4359, 0.75, 16.6269, 11.4359, 1, 15.6269, 11.4359, 1, 16.8769, 11.4359, 1.25, 19.8769, 11.4359, -0.5, 18.8769, 11.4359, -1.5, 18.8769, 11.4359, -1, 20.6269, 11.4359, -0.5, 20.3769, 11.4359, 2.5, 18.8769, 11.4359, 3.5, -13.6231, 11.4359, 1.75, -13.3731, 11.4359, 4.75, -13.3731, 11.4359, 0, -14.3731, 11.4359, 0.75, -7.87309, 6.31593, 6.75, -6.37309, 6.31593, 7.5, -4.37309, 6.31593, 1.5, -7.12309, 6.31593, 6, -5.12309, 6.31593, 9, -4.37309, 6.31593, 9, -4.37309, 6.31593, 6.25, -3.62309, 6.31593, 5.5, 1.87691, 6.31593, 5.5, 1.87691, 6.31593, 2.25, -3.62309, 6.31593, 2.25, 7.87691, 6.31593, 6.75, 6.62691, 6.31593, 7.5, 5.12691, 6.31593, 12, 4.37691, 6.31593, 9.5, 3.62691, 6.31593, 10.25, 7.12691, 6.31593, 6, -3.62309, 6.31593, 10.25, -5.12309, 6.31593, 12, 4.37691, 6.31593, 1.5, 5.12691, 6.31593, 8.5, 4.37691, 6.31593, 6.25, 3.62691, 6.31593, 5.5, 3.62691, 6.31593, 2.25, 13.3769, 11.4359, 0, 13.3769, 11.4359, 4.5, 13.6269, 11.4359, 1.75, 14.3769, 11.4359, 1.25, 23.3769, 0.235931, 2.5, 21.3769, 0.235931, 2.25, 14.1269, 0.715931, 6.75, 23.8769, 0.715931, 6.75, 20.1269, 0.235931, 3.5, 17.8769, 0.235931, 3.5, 15.5198, 0.235931, 6.75, 21.0912, 0.235931, 6.75, 22.0019, 0.235931, 5.125, 16.6269, 0.235931, 2.25, -4.62309, 0.235931, 5.75, -4.62309, 0.235931, 5.25, 3.87691, 0.235931, 6.5, 2.62691, 0.235931, 5, 1.12691, 0.235931, 6.5, 1.12691, 0.235931, 10.75, 3.87691, 0.235931, 10.75, 4.62691, 0.235931, 5.75, 4.62691, 0.235931, 5.25, -1.12309, 0.235931, 6.5, -2.62309, 0.235931, 5, -3.87309, 0.235931, 6.5, -3.87309, 0.235931, 10.75, -1.12309, 0.235931, 10.75, 3.87691, 0.235931, 4.5, 0.376913, 0.235931, 11.5, -0.373087, 0.235931, 11.5, -3.87309, 0.235931, 4.5, -0.373087, 0.235931, 13.5, 0.376913, 0.235931, 13.5, -24.3731, 11.4359, 5.75, -23.3731, 11.4359, 11.5, -23.3731, 11.4359, 6.5, -29.1231, 11.4359, 11.5, 24.3769, 11.4359, 5.75, 23.3769, 11.4359, 6.5, 23.3769, 11.4359, 11.5, 29.1269, 11.4359, 11.5, 26.1269, 0.395931, 5, 26.1269, 0.555931, 6, 26.6269, 0.395931, 5.75, -18.1231, 11.4359, 6.5, -19.1231, 11.4359, 5.5, -19.8731, 11.4359, 6.5, -13.3731, 11.4359, 11.5, -13.3731, 11.4359, 5.5, -14.6231, 11.4359, 6.5, 19.8769, 11.4359, 6.5, 18.8769, 11.4359, 5.5, 18.1269, 11.4359, 6.5, 14.6269, 11.4359, 6.5, 13.3769, 11.4359, 5.5, 13.3769, 11.4359, 11.5, -21.3731, 5.19593, 16.5, -21.3731, 5.35593, 17.25, -20.6231, 5.35593, 17.25, -20.6231, 5.19593, 16.5, -16.6231, 5.19593, 10.75, -14.8731, 5.19593, 8.75, -22.8731, 5.19593, 14.25, -22.8731, 5.19593, 15.75, -22.1231, 5.19593, 15.75, -19.8731, 5.19593, 15.75, -15.1231, 5.19593, 11.5, -14.1231, 5.19593, 10.75, -14.1231, 5.19593, 9.5, -15.8731, 5.19593, 11.5, -15.1231, 5.19593, 13.5, -15.8731, 5.19593, 13.5, -16.6231, 5.19593, 14.25, -14.1231, 5.19593, 15.75, -14.1231, 5.19593, 14.25, -15.8731, 5.35593, 12.5, -15.1231, 5.35593, 12.5, 20.6269, 5.19593, 16.5, 20.6269, 5.35593, 17.25, 21.3769, 5.35593, 17.25, 21.3769, 5.19593, 16.5, 16.6269, 5.19593, 10.75, 14.8769, 5.35593, 8.75, 19.8769, 5.19593, 15.75, 22.1269, 5.19593, 15.75, 22.8769, 5.19593, 14.25, 22.8769, 5.19593, 15.75, 14.1269, 5.19593, 9.5, 14.1269, 5.19593, 10.75, 15.1269, 5.19593, 11.5, 15.8769, 5.19593, 11.5, 16.6269, 5.19593, 14.25, 15.8769, 5.19593, 13.5, 15.1269, 5.19593, 13.5, 14.1269, 5.19593, 14.25, 14.1269, 5.19593, 15.75, 15.1269, 5.35593, 12.5, 15.8769, 5.35593, 12.5, 10.1269, -0.0840687, 10.25, 11.3769, 0.0759314, 10.25, 11.1269, 0.0759314, 9.75, 9.87691, 0.0759314, 9.75, 0.376913, 0.235931, 15.5, -0.373087, 0.235931, 15.5, -3.62309, 0.235931, 18.25, -2.62309, 0.235931, 19.5, -1.62309, 0.235931, 18.5, -1.12309, 0.235931, 16.25, -3.62309, 0.235931, 16.25, 1.12691, 0.235931, 16.25, -9.37309, 0.235931, 26.5, -2.62309, 0.235931, 20.25, -10.1231, 0.235931, 24.5, -10.8731, 0.235931, 26.25, 1.87691, 0.235931, 18.75, 3.62691, 0.235931, 18.5, 3.87691, 0.235931, 16.5, -10.8731, 0.235931, 30.5, -9.37309, 0.235931, 30.5, -24.1231, 10.7959, 18.75, -24.3731, 10.7959, 18.25, -25.1231, 10.7959, 18.5, -25.1231, 10.7959, 38, -13.3731, 10.7959, 15.5, -13.3731, 10.7959, 14.75, -14.3731, 10.7959, 13.75, -22.1231, 10.7959, 16.5, -14.8731, 10.7959, 16.5, -22.6231, 10.7959, 13.75, -24.1231, 10.7959, 15, -14.8731, 10.7959, 18, -22.3731, 10.7959, 18.25, -22.8731, 10.7959, 18.75, -13.3731, 10.7959, 38, -14.1231, 10.7959, 18.75, -13.3731, 10.7959, 18.75, 24.1269, 10.7959, 17.75, 24.1269, 10.7959, 13.75, 13.3769, 10.7959, 13.75, 25.1269, 10.7959, 18.5, 13.3769, 10.7959, 38, 25.1269, 10.7959, 38, 3.62691, 5.67593, 17, 4.12691, 5.67593, 16.5, 3.37691, 5.67593, 15.5, -3.37309, 5.67593, 15.5, -4.12309, 5.67593, 16.5, -3.62309, 5.67593, 17, 2.62691, 5.67593, 20, 4.12691, 5.67593, 19, 3.62691, 5.67593, 18.5, 1.62691, 5.67593, 18.75, -3.62309, 5.67593, 18.25, -4.37309, 5.67593, 19, -2.62309, 5.67593, 20, -1.62309, 5.67593, 18.75, 2.87691, 0.235931, 19.75, 10.1269, 0.235931, 24.5, 2.87691, 0.235931, 20.5, 9.12691, 0.235931, 26.25, 10.1269, 0.235931, 25.25, 9.37691, 0.235931, 30, 10.8769, 0.235931, 30, 10.8769, 0.235931, 26, -3.87309, 5.67593, 28.5, -3.37309, 5.67593, 28.25, -4.12309, 5.67593, 27.5, -5.37309, 5.67593, 28, -10.3731, 5.67593, 23.75, -10.3731, 5.67593, 25, -8.37309, 5.67593, 25.5, -6.87309, 5.67593, 25.5, -6.87309, 5.67593, 28.25, -6.62309, 5.67593, 29, -5.87309, 5.67593, 27.5, -5.87309, 5.67593, 26.5, -4.12309, 5.67593, 26.75, -2.87309, 5.67593, 25.5, -1.12309, 5.67593, 22, -2.62309, 5.67593, 20.75, -6.12309, 5.67593, 19.5, -1.37309, 5.67593, 25.25, -8.87309, 5.67593, 26, -4.87309, 5.67593, 19.5, 3.62691, 5.67593, 28.25, 3.87691, 5.67593, 28.75, 4.62691, 5.67593, 28, -0.123087, 5.67593, 26, -0.123087, 5.67593, 27, 0.376913, 5.67593, 27, 1.12691, 5.67593, 25.25, 4.12691, 5.67593, 26.75, 5.87691, 5.67593, 27.5, 5.87691, 5.67593, 26.5, 6.87691, 5.67593, 28.75, 8.12691, 5.67593, 25.25, 10.3769, 5.67593, 25, 10.3769, 5.67593, 23.75, 7.12691, 5.67593, 25.25, 2.37691, 5.67593, 25.25, 1.37691, 5.67593, 22, 4.62691, 5.67593, 19.5, 8.87691, 5.67593, 26, 2.62691, 5.67593, 20.75, 6.12691, 5.67593, 19.5, -0.123087, 5.67593, 21.5, -23.8731, 0.235931, 32, -21.3731, 0.235931, 32, -21.3731, 0.235931, 30.75, -22.3731, 0.235931, 27.5, -20.1231, 0.235931, 29.5, -18.6231, 0.235931, 29.5, -18.6231, 0.235931, 26.75, -19.6231, 0.395931, 26.25, -21.6231, 0.235931, 26.75, -19.6231, 4.71593, 19.25, -21.8731, 4.55593, 19.25, -19.6231, 2.15593, 23.45, -21.6648, 0.555931, 25.5, -23.8731, 0.235931, 27.5, -16.6231, 0.235931, 30.75, -16.6231, 0.235931, 31.75, -14.1231, 0.235931, 31.75, -17.8731, 0.235931, 29.5, -17.6231, 0.235931, 26.25, -14.1231, 0.235931, 19.25, -17.8731, 0.235931, 19.25, 14.1269, 0.235931, 31.75, 16.6269, 0.235931, 31.75, 16.6269, 0.235931, 30.75, 17.8769, 0.235931, 29.5, 18.6269, 0.235931, 29.5, 18.6269, 0.235931, 26.75, 17.6269, 0.235931, 26.25, 17.8769, 0.235931, 19.25, 14.1269, 0.235931, 19.25, 21.3769, 0.235931, 30.75, 21.3769, 0.235931, 32, 23.8769, 0.235931, 32, 20.1269, 0.235931, 29.5, 22.8769, 0.235931, 27.5, 21.6269, 0.235931, 26.5, 19.6269, 0.395931, 26.25, 21.8769, 4.55593, 19.25, 19.6269, 4.71593, 19.25, 21.6769, 0.875931, 25.05, 21.8269, 3.75593, 20.7, 19.6269, 3.75593, 20.65, 23.8769, 0.235931, 27.5, -9.37309, 5.67593, 29, -8.87309, 5.67593, 28.25, -9.37309, 5.67593, 28, -5.87309, 5.67593, 31.25, -6.62309, 5.67593, 30.5, -7.12309, 5.67593, 31.25, -5.87309, 5.67593, 36.75, -10.6231, 5.67593, 26, -9.37309, 5.67593, 26.5, -5.12309, 5.67593, 36.75, -5.12309, 5.67593, 31.25, -11.3731, 5.67593, 26.5, -8.62309, 5.67593, 31.25, -9.37309, 5.67593, 30.5, -11.3731, 5.67593, 36.5, -10.3731, 5.67593, 37.25, -10.3731, 5.67593, 38, -6.62309, 5.67593, 38, 7.12691, 5.67593, 31.25, 6.37691, 5.67593, 30.75, 6.12691, 5.67593, 31.25, 5.87691, 5.67593, 36.75, 9.12691, 5.67593, 28, 8.62691, 5.67593, 28.5, 9.37691, 5.67593, 29, 10.6269, 5.67593, 26, 11.3769, 5.67593, 26.5, 5.12691, 5.67593, 31.25, 5.12691, 5.67593, 36.75, 11.3769, 5.67593, 36.25, 9.37691, 5.67593, 30.5, 8.62691, 5.67593, 31.25, 6.62691, 5.67593, 38, 10.3769, 5.67593, 38, 10.6269, 5.67593, 36.75, 0.376913, 5.67593, 27.5, -0.873087, 5.67593, 28.25, -3.37309, 5.67593, 29, -1.87309, 5.67593, 28.75, 3.12691, 5.67593, 28.75, 3.37691, 5.67593, 30.25, -1.62309, 5.67593, 28.25, -4.37309, 5.67593, 36.75, 0.626913, 5.67593, 40.5, 3.37691, 5.67593, 37.75, 4.37691, 5.67593, 31.25, -4.37309, 5.67593, 31.25, 4.37691, 5.67593, 36.75, 2.12691, 5.67593, 39.25, 3.37691, 5.67593, 39.75, -3.37309, 5.67593, 37.75, -3.37309, 5.67593, 39.75, -1.87309, 5.67593, 39.25, 1.87691, 5.67593, 28.75, -3.37309, 5.67593, 30.25, -0.373087, 5.67593, 40.5, -11.6231, 0.235931, 33.75, -12.3731, 0.235931, 33.75, -12.3731, 0.235931, 34.25, -11.6231, 0.235931, 34.25, -1.37309, 0.235931, 31, 1.37691, 0.235931, 31, 2.62691, 0.235931, 29, 0.876913, 0.235931, 28.25, -0.873087, 0.235931, 28.25, -2.62309, 0.235931, 29, -10.8731, 0.235931, 33, -10.8731, 0.235931, 35, -8.62309, 0.235931, 31.5, -2.87309, 0.235931, 35.25, -2.87309, 0.235931, 32.5, -4.37309, 0.235931, 31.5, 2.87691, 0.235931, 32.75, 4.62691, 0.235931, 31.5, 3.12691, 0.235931, 30.25, -4.62309, 0.235931, 36.5, -10.8731, 0.235931, 36.75, 11.6269, 0.235931, 34.25, 12.3769, 0.235931, 34.25, 12.3769, 0.235931, 33.75, 11.6269, 0.235931, 33.75, 4.37691, 0.235931, 36.5, 10.6269, 0.235931, 36.75, 10.8769, 0.235931, 33, 8.62691, 0.235931, 31.5, 10.8769, 0.235931, 35, -3.12309, 0.235931, 37.75, -3.12309, 0.235931, 38.5, -2.37309, 0.235931, 39.25, 9.37691, 0.235931, 30.75, 2.87691, 0.235931, 35.5, -1.37309, 0.235931, 37, 2.37691, 0.235931, 39.25, 1.37691, 0.235931, 37, 0.876913, 0.235931, 39.5, 0.376913, 0.235931, 40.25, -13.3731, 0.235931, 34.25, -13.3731, 0.235931, 33.75, -21.3731, 0.235931, 33.25, -14.1231, 0.235931, 35, -14.1231, 0.235931, 33, -16.6231, 0.235931, 33.25, -17.8731, 0.235931, 34.5, -23.8731, 0.235931, 36.75, -20.1231, 0.235931, 34.5, -14.3731, 0.235931, 36.75, 13.3769, 0.235931, 34.25, 13.3769, 0.235931, 33.75, 23.8769, 0.235931, 36.75, 21.3769, 0.235931, 33.25, 20.1269, 0.235931, 34.5, 14.1269, 0.235931, 33, 14.1269, 0.235931, 35, 17.8769, 0.235931, 34.5, 16.6269, 0.235931, 33.25, 14.1269, 0.235931, 36.75)
polygons = [PackedInt32Array(4, 3, 6), PackedInt32Array(6, 3, 2), PackedInt32Array(6, 2, 1), PackedInt32Array(6, 1, 0), PackedInt32Array(6, 0, 5), PackedInt32Array(8, 7, 9), PackedInt32Array(9, 7, 10), PackedInt32Array(12, 11, 13), PackedInt32Array(13, 11, 14), PackedInt32Array(15, 13, 16), PackedInt32Array(16, 13, 10), PackedInt32Array(10, 13, 9), PackedInt32Array(9, 13, 14), PackedInt32Array(19, 18, 17), PackedInt32Array(21, 20, 12), PackedInt32Array(12, 20, 11), PackedInt32Array(24, 11, 22), PackedInt32Array(22, 11, 23), PackedInt32Array(27, 26, 25), PackedInt32Array(25, 14, 27), PackedInt32Array(27, 14, 28), PackedInt32Array(28, 14, 24), PackedInt32Array(24, 14, 11), PackedInt32Array(17, 25, 19), PackedInt32Array(19, 25, 29), PackedInt32Array(29, 25, 26), PackedInt32Array(28, 30, 27), PackedInt32Array(35, 40, 36), PackedInt32Array(36, 40, 37), PackedInt32Array(37, 38, 31), PackedInt32Array(38, 39, 32), PackedInt32Array(32, 39, 33), PackedInt32Array(39, 40, 34), PackedInt32Array(34, 40, 35), PackedInt32Array(40, 38, 37), PackedInt32Array(38, 40, 39), PackedInt32Array(35, 41, 34), PackedInt32Array(43, 42, 44), PackedInt32Array(44, 42, 45), PackedInt32Array(47, 46, 48), PackedInt32Array(50, 49, 51), PackedInt32Array(51, 49, 52), PackedInt32Array(52, 49, 53), PackedInt32Array(44, 45, 51), PackedInt32Array(51, 45, 54), PackedInt32Array(51, 54, 50), PackedInt32Array(46, 55, 48), PackedInt32Array(48, 55, 56), PackedInt32Array(56, 55, 57), PackedInt32Array(56, 58, 48), PackedInt32Array(55, 51, 57), PackedInt32Array(57, 51, 59), PackedInt32Array(59, 51, 52), PackedInt32Array(59, 61, 57), PackedInt32Array(57, 61, 60), PackedInt32Array(63, 62, 64), PackedInt32Array(64, 62, 65), PackedInt32Array(67, 66, 68), PackedInt32Array(68, 66, 69), PackedInt32Array(73, 72, 70), PackedInt32Array(70, 72, 71), PackedInt32Array(76, 75, 74), PackedInt32Array(76, 65, 62), PackedInt32Array(73, 66, 72), PackedInt32Array(72, 66, 67), PackedInt32Array(77, 65, 76), PackedInt32Array(74, 68, 76), PackedInt32Array(76, 68, 77), PackedInt32Array(77, 68, 78), PackedInt32Array(78, 68, 69), PackedInt32Array(80, 79, 64), PackedInt32Array(64, 79, 63), PackedInt32Array(82, 81, 83), PackedInt32Array(83, 81, 84), PackedInt32Array(84, 81, 85), PackedInt32Array(85, 79, 80), PackedInt32Array(80, 86, 85), PackedInt32Array(85, 86, 3), PackedInt32Array(85, 3, 4), PackedInt32Array(85, 4, 84), PackedInt32Array(89, 88, 87), PackedInt32Array(89, 87, 83), PackedInt32Array(83, 87, 90), PackedInt32Array(83, 90, 82), PackedInt32Array(94, 93, 91), PackedInt32Array(91, 93, 92), PackedInt32Array(96, 95, 97), PackedInt32Array(97, 95, 99), PackedInt32Array(97, 99, 98), PackedInt32Array(94, 91, 98), PackedInt32Array(94, 98, 100), PackedInt32Array(100, 98, 0), PackedInt32Array(0, 98, 5), PackedInt32Array(5, 98, 99), PackedInt32Array(103, 102, 101), PackedInt32Array(101, 95, 103), PackedInt32Array(103, 95, 104), PackedInt32Array(104, 95, 96), PackedInt32Array(106, 105, 93), PackedInt32Array(93, 105, 92), PackedInt32Array(108, 107, 109), PackedInt32Array(109, 107, 110), PackedInt32Array(114, 113, 111), PackedInt32Array(111, 113, 112), PackedInt32Array(116, 115, 117), PackedInt32Array(117, 115, 107), PackedInt32Array(107, 115, 118), PackedInt32Array(107, 118, 110), PackedInt32Array(105, 106, 116), PackedInt32Array(116, 106, 115), PackedInt32Array(114, 111, 109), PackedInt32Array(109, 111, 120), PackedInt32Array(109, 120, 119), PackedInt32Array(109, 119, 108), PackedInt32Array(117, 121, 116), PackedInt32Array(123, 122, 121), PackedInt32Array(121, 122, 116), PackedInt32Array(125, 124, 126), PackedInt32Array(126, 124, 127), PackedInt32Array(102, 103, 128), PackedInt32Array(129, 87, 88), PackedInt32Array(132, 131, 130), PackedInt32Array(135, 134, 133), PackedInt32Array(88, 139, 129), PackedInt32Array(129, 139, 138), PackedInt32Array(129, 138, 137), PackedInt32Array(129, 137, 128), PackedInt32Array(128, 137, 136), PackedInt32Array(128, 136, 102), PackedInt32Array(132, 130, 140), PackedInt32Array(140, 130, 141), PackedInt32Array(141, 130, 142), PackedInt32Array(142, 130, 135), PackedInt32Array(142, 135, 133), PackedInt32Array(144, 129, 143), PackedInt32Array(143, 129, 128), PackedInt32Array(143, 135, 144), PackedInt32Array(144, 135, 130), PackedInt32Array(146, 145, 147), PackedInt32Array(147, 145, 148), PackedInt32Array(151, 150, 149), PackedInt32Array(148, 145, 152), PackedInt32Array(131, 132, 153), PackedInt32Array(153, 132, 150), PackedInt32Array(153, 150, 154), PackedInt32Array(154, 150, 151), PackedInt32Array(148, 152, 149), PackedInt32Array(149, 152, 155), PackedInt32Array(149, 155, 151), PackedInt32Array(157, 156, 158), PackedInt32Array(158, 156, 159), PackedInt32Array(162, 161, 160), PackedInt32Array(163, 158, 159), PackedInt32Array(134, 165, 133), PackedInt32Array(133, 165, 161), PackedInt32Array(161, 165, 164), PackedInt32Array(161, 164, 160), PackedInt32Array(159, 162, 163), PackedInt32Array(163, 162, 166), PackedInt32Array(166, 162, 160), PackedInt32Array(167, 70, 71), PackedInt32Array(169, 168, 167), PackedInt32Array(167, 71, 169), PackedInt32Array(169, 71, 170), PackedInt32Array(172, 171, 173), PackedInt32Array(173, 171, 174), PackedInt32Array(175, 169, 170), PackedInt32Array(174, 175, 176), PackedInt32Array(176, 175, 170), PackedInt32Array(174, 176, 173), PackedInt32Array(179, 178, 177), PackedInt32Array(181, 180, 177), PackedInt32Array(177, 180, 179), PackedInt32Array(182, 184, 183), PackedInt32Array(186, 184, 185), PackedInt32Array(185, 184, 182), PackedInt32Array(188, 187, 190), PackedInt32Array(190, 187, 189), PackedInt32Array(191, 192, 187), PackedInt32Array(187, 192, 189), PackedInt32Array(194, 195, 193), PackedInt32Array(193, 195, 113), PackedInt32Array(113, 195, 112), PackedInt32Array(191, 199, 196), PackedInt32Array(196, 199, 198), PackedInt32Array(196, 198, 197), PackedInt32Array(194, 193, 189), PackedInt32Array(194, 189, 200), PackedInt32Array(200, 189, 192), PackedInt32Array(191, 196, 192), PackedInt32Array(203, 202, 201), PackedInt32Array(201, 205, 203), PackedInt32Array(203, 205, 204), PackedInt32Array(204, 205, 206), PackedInt32Array(206, 205, 208), PackedInt32Array(206, 208, 207), PackedInt32Array(211, 210, 209), PackedInt32Array(211, 209, 212), PackedInt32Array(212, 209, 213), PackedInt32Array(214, 212, 215), PackedInt32Array(215, 212, 213), PackedInt32Array(217, 216, 218), PackedInt32Array(218, 216, 219), PackedInt32Array(221, 220, 222), PackedInt32Array(222, 220, 223), PackedInt32Array(156, 157, 224), PackedInt32Array(225, 146, 147), PackedInt32Array(229, 228, 226), PackedInt32Array(226, 228, 227), PackedInt32Array(225, 147, 224), PackedInt32Array(224, 147, 156), PackedInt32Array(226, 219, 229), PackedInt32Array(229, 219, 223), PackedInt32Array(230, 225, 231), PackedInt32Array(231, 225, 224), PackedInt32Array(219, 232, 223), PackedInt32Array(223, 232, 233), PackedInt32Array(233, 232, 230), PackedInt32Array(233, 230, 231), PackedInt32Array(233, 222, 223), PackedInt32Array(219, 216, 232), PackedInt32Array(234, 217, 218), PackedInt32Array(234, 218, 235), PackedInt32Array(235, 218, 236), PackedInt32Array(235, 236, 155), PackedInt32Array(155, 152, 235), PackedInt32Array(220, 221, 237), PackedInt32Array(237, 238, 220), PackedInt32Array(220, 238, 239), PackedInt32Array(239, 238, 166), PackedInt32Array(238, 163, 166), PackedInt32Array(240, 209, 210), PackedInt32Array(242, 241, 243), PackedInt32Array(243, 241, 244), PackedInt32Array(244, 240, 210), PackedInt32Array(243, 244, 245), PackedInt32Array(245, 244, 246), PackedInt32Array(246, 244, 210), PackedInt32Array(248, 247, 249), PackedInt32Array(249, 247, 250), PackedInt32Array(202, 203, 251), PackedInt32Array(251, 250, 202), PackedInt32Array(202, 250, 252), PackedInt32Array(252, 250, 253), PackedInt32Array(253, 250, 254), PackedInt32Array(254, 250, 247), PackedInt32Array(254, 247, 255), PackedInt32Array(258, 257, 256), PackedInt32Array(261, 260, 259), PackedInt32Array(263, 227, 262), PackedInt32Array(262, 227, 228), PackedInt32Array(259, 264, 261), PackedInt32Array(261, 264, 266), PackedInt32Array(261, 266, 265), PackedInt32Array(262, 266, 263), PackedInt32Array(263, 266, 267), PackedInt32Array(267, 266, 264), PackedInt32Array(267, 264, 268), PackedInt32Array(258, 256, 268), PackedInt32Array(268, 256, 267), PackedInt32Array(267, 256, 269), PackedInt32Array(271, 270, 272), PackedInt32Array(272, 270, 273), PackedInt32Array(274, 273, 275), PackedInt32Array(275, 273, 276), PackedInt32Array(274, 272, 273), PackedInt32Array(278, 277, 279), PackedInt32Array(279, 277, 276), PackedInt32Array(276, 277, 275), PackedInt32Array(171, 172, 280), PackedInt32Array(284, 285, 281), PackedInt32Array(281, 285, 283), PackedInt32Array(281, 283, 280), PackedInt32Array(280, 283, 171), PackedInt32Array(171, 283, 282), PackedInt32Array(288, 287, 286), PackedInt32Array(289, 282, 290), PackedInt32Array(290, 282, 283), PackedInt32Array(286, 292, 288), PackedInt32Array(288, 292, 291), PackedInt32Array(281, 295, 284), PackedInt32Array(284, 295, 294), PackedInt32Array(284, 294, 293), PackedInt32Array(284, 293, 292), PackedInt32Array(292, 293, 291), PackedInt32Array(297, 296, 298), PackedInt32Array(298, 296, 299), PackedInt32Array(299, 296, 300), PackedInt32Array(302, 301, 303), PackedInt32Array(303, 301, 304), PackedInt32Array(304, 301, 299), PackedInt32Array(308, 307, 305), PackedInt32Array(305, 307, 306), PackedInt32Array(301, 298, 299), PackedInt32Array(308, 305, 304), PackedInt32Array(304, 305, 303), PackedInt32Array(311, 310, 309), PackedInt32Array(314, 313, 312), PackedInt32Array(312, 315, 314), PackedInt32Array(314, 315, 309), PackedInt32Array(317, 316, 311), PackedInt32Array(315, 318, 309), PackedInt32Array(309, 318, 311), PackedInt32Array(311, 318, 317), PackedInt32Array(316, 317, 319), PackedInt32Array(319, 317, 320), PackedInt32Array(320, 317, 321), PackedInt32Array(197, 198, 322), PackedInt32Array(322, 198, 323), PackedInt32Array(323, 198, 324), PackedInt32Array(327, 326, 325), PackedInt32Array(324, 328, 323), PackedInt32Array(322, 331, 332), PackedInt32Array(332, 331, 330), PackedInt32Array(332, 330, 329), PackedInt32Array(327, 325, 334), PackedInt32Array(334, 325, 333), PackedInt32Array(322, 332, 336), PackedInt32Array(336, 332, 329), PackedInt32Array(336, 329, 335), PackedInt32Array(335, 337, 338), PackedInt32Array(338, 337, 334), PackedInt32Array(322, 336, 339), PackedInt32Array(339, 336, 335), PackedInt32Array(339, 335, 338), PackedInt32Array(339, 338, 334), PackedInt32Array(339, 334, 340), PackedInt32Array(340, 334, 333), PackedInt32Array(331, 322, 323), PackedInt32Array(278, 279, 341), PackedInt32Array(341, 279, 342), PackedInt32Array(271, 343, 270), PackedInt32Array(270, 343, 344), PackedInt32Array(346, 345, 347), PackedInt32Array(347, 345, 348), PackedInt32Array(350, 349, 351), PackedInt32Array(351, 349, 352), PackedInt32Array(355, 354, 353), PackedInt32Array(353, 354, 348), PackedInt32Array(358, 357, 356), PackedInt32Array(352, 349, 359), PackedInt32Array(354, 347, 348), PackedInt32Array(361, 360, 362), PackedInt32Array(362, 360, 363), PackedInt32Array(365, 344, 364), PackedInt32Array(367, 366, 368), PackedInt32Array(368, 366, 369), PackedInt32Array(342, 371, 370), PackedInt32Array(357, 358, 359), PackedInt32Array(359, 358, 352), PackedInt32Array(372, 341, 342), PackedInt32Array(356, 373, 358), PackedInt32Array(358, 373, 371), PackedInt32Array(371, 373, 370), PackedInt32Array(344, 343, 374), PackedInt32Array(360, 375, 363), PackedInt32Array(363, 375, 364), PackedInt32Array(368, 369, 373), PackedInt32Array(373, 369, 370), PackedInt32Array(353, 376, 355), PackedInt32Array(342, 370, 372), PackedInt32Array(372, 370, 364), PackedInt32Array(372, 364, 374), PackedInt32Array(374, 364, 344), PackedInt32Array(376, 353, 375), PackedInt32Array(375, 353, 365), PackedInt32Array(375, 365, 364), PackedInt32Array(380, 379, 377), PackedInt32Array(377, 379, 378), PackedInt32Array(383, 382, 384), PackedInt32Array(384, 382, 288), PackedInt32Array(288, 382, 287), PackedInt32Array(287, 382, 381), PackedInt32Array(377, 385, 380), PackedInt32Array(380, 385, 384), PackedInt32Array(384, 385, 383), PackedInt32Array(383, 385, 386), PackedInt32Array(386, 385, 387), PackedInt32Array(387, 385, 388), PackedInt32Array(388, 385, 389), PackedInt32Array(388, 390, 387), PackedInt32Array(382, 391, 381), PackedInt32Array(395, 394, 392), PackedInt32Array(392, 394, 393), PackedInt32Array(397, 396, 398), PackedInt32Array(398, 396, 399), PackedInt32Array(392, 400, 395), PackedInt32Array(395, 400, 401), PackedInt32Array(401, 400, 402), PackedInt32Array(403, 401, 404), PackedInt32Array(404, 401, 402), PackedInt32Array(406, 405, 397), PackedInt32Array(397, 405, 407), PackedInt32Array(397, 407, 396), PackedInt32Array(402, 400, 408), PackedInt32Array(408, 400, 326), PackedInt32Array(326, 400, 325), PackedInt32Array(408, 326, 399), PackedInt32Array(399, 411, 398), PackedInt32Array(398, 411, 409), PackedInt32Array(409, 411, 410), PackedInt32Array(410, 411, 326), PackedInt32Array(326, 411, 399), PackedInt32Array(412, 390, 388), PackedInt32Array(381, 391, 413), PackedInt32Array(412, 388, 414), PackedInt32Array(414, 388, 415), PackedInt32Array(413, 417, 381), PackedInt32Array(381, 417, 416), PackedInt32Array(414, 415, 417), PackedInt32Array(417, 415, 416), PackedInt32Array(420, 419, 418), PackedInt32Array(421, 420, 418), PackedInt32Array(422, 319, 320), PackedInt32Array(421, 418, 423), PackedInt32Array(423, 418, 422), PackedInt32Array(423, 422, 320), PackedInt32Array(426, 425, 424), PackedInt32Array(429, 428, 427), PackedInt32Array(430, 260, 261), PackedInt32Array(256, 257, 431), PackedInt32Array(426, 424, 432), PackedInt32Array(432, 424, 433), PackedInt32Array(433, 424, 431), PackedInt32Array(431, 424, 256), PackedInt32Array(427, 434, 429), PackedInt32Array(429, 434, 435), PackedInt32Array(429, 435, 430), PackedInt32Array(429, 430, 261), PackedInt32Array(433, 435, 432), PackedInt32Array(432, 435, 434), PackedInt32Array(437, 436, 438), PackedInt32Array(438, 436, 439), PackedInt32Array(328, 324, 440), PackedInt32Array(440, 324, 439), PackedInt32Array(436, 440, 439), PackedInt32Array(443, 442, 441), PackedInt32Array(446, 445, 444), PackedInt32Array(444, 447, 446), PackedInt32Array(446, 447, 448), PackedInt32Array(446, 448, 297), PackedInt32Array(297, 448, 296), PackedInt32Array(450, 449, 451), PackedInt32Array(451, 449, 452), PackedInt32Array(289, 453, 282), PackedInt32Array(282, 453, 452), PackedInt32Array(451, 452, 453), PackedInt32Array(455, 454, 379), PackedInt32Array(379, 454, 378), PackedInt32Array(459, 458, 456), PackedInt32Array(456, 458, 457), PackedInt32Array(463, 462, 460), PackedInt32Array(460, 462, 461), PackedInt32Array(454, 455, 456), PackedInt32Array(456, 455, 464), PackedInt32Array(456, 464, 459), PackedInt32Array(463, 460, 458), PackedInt32Array(458, 460, 465), PackedInt32Array(458, 465, 457), PackedInt32Array(469, 468, 466), PackedInt32Array(466, 468, 467), PackedInt32Array(473, 472, 470), PackedInt32Array(470, 472, 471), PackedInt32Array(475, 393, 474), PackedInt32Array(474, 393, 394), PackedInt32Array(469, 472, 468), PackedInt32Array(468, 472, 476), PackedInt32Array(476, 472, 473), PackedInt32Array(474, 470, 475), PackedInt32Array(475, 470, 477), PackedInt32Array(477, 470, 471), PackedInt32Array(480, 479, 478), PackedInt32Array(478, 481, 480), PackedInt32Array(480, 481, 482), PackedInt32Array(482, 484, 483), PackedInt32Array(483, 486, 485), PackedInt32Array(485, 487, 483), PackedInt32Array(483, 487, 482), PackedInt32Array(482, 487, 488), PackedInt32Array(482, 488, 480), PackedInt32Array(491, 490, 489), PackedInt32Array(494, 493, 492), PackedInt32Array(497, 496, 495), PackedInt32Array(491, 489, 498), PackedInt32Array(498, 489, 495), PackedInt32Array(495, 489, 497), PackedInt32Array(497, 489, 499), PackedInt32Array(497, 499, 500), PackedInt32Array(497, 500, 494), PackedInt32Array(494, 492, 497), PackedInt32Array(503, 502, 501), PackedInt32Array(503, 501, 504), PackedInt32Array(346, 505, 345), PackedInt32Array(345, 505, 506), PackedInt32Array(361, 362, 507), PackedInt32Array(506, 505, 508), PackedInt32Array(509, 506, 510), PackedInt32Array(510, 506, 511), PackedInt32Array(511, 506, 508), PackedInt32Array(515, 514, 512), PackedInt32Array(512, 514, 513), PackedInt32Array(511, 508, 512), PackedInt32Array(512, 508, 515), PackedInt32Array(515, 508, 507), PackedInt32Array(507, 508, 361), PackedInt32Array(350, 351, 516), PackedInt32Array(516, 351, 517), PackedInt32Array(520, 519, 518), PackedInt32Array(521, 516, 517), PackedInt32Array(510, 522, 509), PackedInt32Array(509, 522, 523), PackedInt32Array(520, 518, 522), PackedInt32Array(522, 518, 523), PackedInt32Array(524, 366, 367), PackedInt32Array(517, 525, 521), PackedInt32Array(521, 525, 526), PackedInt32Array(528, 527, 514), PackedInt32Array(514, 527, 513), PackedInt32Array(526, 525, 519), PackedInt32Array(519, 525, 518), PackedInt32Array(526, 527, 521), PackedInt32Array(521, 527, 528), PackedInt32Array(521, 528, 524), PackedInt32Array(521, 524, 367), PackedInt32Array(531, 530, 529), PackedInt32Array(532, 531, 529), PackedInt32Array(533, 534, 405), PackedInt32Array(405, 534, 407), PackedInt32Array(536, 540, 541), PackedInt32Array(541, 540, 537), PackedInt32Array(537, 540, 538), PackedInt32Array(538, 540, 539), PackedInt32Array(538, 539, 535), PackedInt32Array(403, 404, 542), PackedInt32Array(534, 533, 537), PackedInt32Array(537, 533, 541), PackedInt32Array(541, 533, 536), PackedInt32Array(542, 538, 403), PackedInt32Array(403, 538, 535), PackedInt32Array(544, 543, 462), PackedInt32Array(462, 543, 461), PackedInt32Array(546, 545, 547), PackedInt32Array(547, 545, 549), PackedInt32Array(547, 549, 548), PackedInt32Array(551, 466, 550), PackedInt32Array(550, 466, 467), PackedInt32Array(553, 552, 554), PackedInt32Array(554, 552, 556), PackedInt32Array(554, 556, 555), PackedInt32Array(429, 557, 428), PackedInt32Array(428, 557, 546), PackedInt32Array(559, 556, 558), PackedInt32Array(558, 556, 548), PackedInt32Array(548, 556, 552), PackedInt32Array(548, 552, 547), PackedInt32Array(424, 425, 560), PackedInt32Array(560, 425, 553), PackedInt32Array(558, 562, 559), PackedInt32Array(559, 562, 561), PackedInt32Array(550, 545, 551), PackedInt32Array(551, 545, 557), PackedInt32Array(557, 545, 546), PackedInt32Array(544, 560, 543), PackedInt32Array(543, 560, 554), PackedInt32Array(554, 560, 553), PackedInt32Array(448, 447, 563), PackedInt32Array(565, 564, 563), PackedInt32Array(563, 564, 566), PackedInt32Array(563, 566, 448), PackedInt32Array(567, 421, 423), PackedInt32Array(568, 567, 569), PackedInt32Array(569, 567, 570), PackedInt32Array(570, 567, 423), PackedInt32Array(573, 572, 571), PackedInt32Array(575, 574, 576), PackedInt32Array(576, 574, 564), PackedInt32Array(564, 574, 577), PackedInt32Array(579, 578, 577), PackedInt32Array(564, 565, 576), PackedInt32Array(574, 579, 577), PackedInt32Array(582, 581, 580), PackedInt32Array(585, 584, 583), PackedInt32Array(580, 568, 569), PackedInt32Array(582, 585, 583), PackedInt32Array(580, 569, 582), PackedInt32Array(582, 569, 585), PackedInt32Array(589, 588, 586), PackedInt32Array(586, 588, 587), PackedInt32Array(449, 450, 590), PackedInt32Array(590, 450, 591), PackedInt32Array(594, 593, 592), PackedInt32Array(586, 594, 589), PackedInt32Array(589, 594, 595), PackedInt32Array(595, 594, 592), PackedInt32Array(599, 590, 596), PackedInt32Array(596, 590, 597), PackedInt32Array(597, 590, 598), PackedInt32Array(598, 590, 591), PackedInt32Array(601, 600, 602), PackedInt32Array(602, 600, 604), PackedInt32Array(602, 604, 603), PackedInt32Array(603, 595, 602), PackedInt32Array(602, 595, 592), PackedInt32Array(596, 606, 599), PackedInt32Array(599, 606, 605), PackedInt32Array(605, 606, 600), PackedInt32Array(605, 600, 601), PackedInt32Array(610, 609, 607), PackedInt32Array(607, 609, 608), PackedInt32Array(438, 611, 437), PackedInt32Array(437, 611, 612), PackedInt32Array(607, 613, 610), PackedInt32Array(610, 613, 614), PackedInt32Array(614, 613, 615), PackedInt32Array(615, 616, 614), PackedInt32Array(620, 619, 611), PackedInt32Array(611, 619, 618), PackedInt32Array(611, 618, 617), PackedInt32Array(611, 617, 612), PackedInt32Array(622, 621, 623), PackedInt32Array(623, 621, 624), PackedInt32Array(624, 621, 625), PackedInt32Array(625, 621, 613), PackedInt32Array(613, 621, 615), PackedInt32Array(620, 627, 619), PackedInt32Array(619, 627, 626), PackedInt32Array(626, 627, 622), PackedInt32Array(626, 622, 623), PackedInt32Array(631, 630, 628), PackedInt32Array(628, 630, 629), PackedInt32Array(633, 561, 632), PackedInt32Array(632, 561, 562), PackedInt32Array(635, 634, 636), PackedInt32Array(636, 634, 638), PackedInt32Array(636, 638, 637), PackedInt32Array(632, 639, 633), PackedInt32Array(633, 639, 637), PackedInt32Array(635, 641, 634), PackedInt32Array(634, 641, 642), PackedInt32Array(642, 641, 640), PackedInt32Array(642, 640, 643), PackedInt32Array(645, 644, 646), PackedInt32Array(646, 644, 639), PackedInt32Array(639, 644, 637), PackedInt32Array(637, 644, 636), PackedInt32Array(648, 647, 640), PackedInt32Array(640, 647, 643), PackedInt32Array(650, 649, 651), PackedInt32Array(651, 649, 652), PackedInt32Array(655, 654, 653), PackedInt32Array(653, 657, 655), PackedInt32Array(655, 657, 656), PackedInt32Array(655, 656, 658), PackedInt32Array(658, 656, 659), PackedInt32Array(661, 660, 662), PackedInt32Array(662, 660, 664), PackedInt32Array(662, 664, 663), PackedInt32Array(662, 663, 652), PackedInt32Array(664, 665, 663), PackedInt32Array(652, 649, 662), PackedInt32Array(657, 660, 656), PackedInt32Array(656, 660, 661), PackedInt32Array(668, 667, 666), PackedInt32Array(666, 669, 668), PackedInt32Array(668, 669, 671), PackedInt32Array(668, 671, 670), PackedInt32Array(674, 673, 672), PackedInt32Array(677, 676, 675), PackedInt32Array(678, 680, 679), PackedInt32Array(678, 681, 680), PackedInt32Array(680, 681, 672), PackedInt32Array(684, 683, 682), PackedInt32Array(684, 682, 685), PackedInt32Array(685, 682, 677), PackedInt32Array(677, 675, 685), PackedInt32Array(685, 675, 681), PackedInt32Array(681, 675, 672), PackedInt32Array(672, 675, 674), PackedInt32Array(686, 644, 645), PackedInt32Array(690, 689, 687), PackedInt32Array(687, 689, 688), PackedInt32Array(687, 688, 686), PackedInt32Array(687, 686, 645), PackedInt32Array(690, 693, 689), PackedInt32Array(689, 693, 691), PackedInt32Array(691, 693, 692), PackedInt32Array(695, 694, 696), PackedInt32Array(696, 694, 697), PackedInt32Array(699, 698, 700), PackedInt32Array(700, 698, 701), PackedInt32Array(704, 697, 702), PackedInt32Array(702, 697, 703), PackedInt32Array(705, 701, 706), PackedInt32Array(706, 701, 707), PackedInt32Array(704, 705, 697), PackedInt32Array(697, 705, 696), PackedInt32Array(696, 705, 706), PackedInt32Array(708, 707, 709), PackedInt32Array(709, 707, 701), PackedInt32Array(709, 701, 710), PackedInt32Array(710, 701, 698), PackedInt32Array(708, 711, 707), PackedInt32Array(700, 712, 699), PackedInt32Array(713, 683, 684), PackedInt32Array(684, 709, 713), PackedInt32Array(713, 709, 710), PackedInt32Array(716, 715, 714), PackedInt32Array(718, 717, 719), PackedInt32Array(719, 717, 720), PackedInt32Array(714, 721, 716), PackedInt32Array(716, 721, 722), PackedInt32Array(722, 721, 723), PackedInt32Array(722, 724, 716), PackedInt32Array(726, 725, 727), PackedInt32Array(727, 725, 728), PackedInt32Array(723, 721, 728), PackedInt32Array(728, 721, 729), PackedInt32Array(729, 720, 730), PackedInt32Array(678, 679, 731), PackedInt32Array(726, 732, 725), PackedInt32Array(678, 731, 733), PackedInt32Array(733, 731, 734), PackedInt32Array(735, 730, 708), PackedInt32Array(708, 730, 720), PackedInt32Array(708, 720, 717), PackedInt32Array(708, 717, 711), PackedInt32Array(730, 733, 729), PackedInt32Array(729, 733, 734), PackedInt32Array(729, 734, 728), PackedInt32Array(728, 734, 727), PackedInt32Array(738, 737, 736), PackedInt32Array(744, 743, 739), PackedInt32Array(739, 743, 742), PackedInt32Array(739, 742, 740), PackedInt32Array(740, 742, 741), PackedInt32Array(744, 748, 743), PackedInt32Array(743, 748, 747), PackedInt32Array(747, 748, 745), PackedInt32Array(745, 748, 746), PackedInt32Array(740, 738, 739), PackedInt32Array(739, 738, 749), PackedInt32Array(749, 738, 736), PackedInt32Array(752, 751, 750), PackedInt32Array(753, 741, 742), PackedInt32Array(742, 754, 753), PackedInt32Array(753, 754, 750), PackedInt32Array(750, 754, 752), PackedInt32Array(756, 755, 754), PackedInt32Array(754, 755, 752), PackedInt32Array(759, 758, 757), PackedInt32Array(762, 761, 760), PackedInt32Array(762, 760, 763), PackedInt32Array(763, 760, 759), PackedInt32Array(763, 759, 757), PackedInt32Array(764, 763, 765), PackedInt32Array(765, 763, 757), PackedInt32Array(768, 767, 766), PackedInt32Array(772, 771, 762), PackedInt32Array(762, 771, 770), PackedInt32Array(762, 770, 769), PackedInt32Array(762, 769, 761), PackedInt32Array(771, 772, 775), PackedInt32Array(775, 772, 776), PackedInt32Array(776, 772, 777), PackedInt32Array(776, 777, 774), PackedInt32Array(776, 774, 773), PackedInt32Array(770, 778, 769), PackedInt32Array(769, 778, 766), PackedInt32Array(766, 778, 768), PackedInt32Array(781, 780, 779), PackedInt32Array(783, 782, 784), PackedInt32Array(784, 782, 785), PackedInt32Array(787, 786, 712), PackedInt32Array(712, 786, 699), PackedInt32Array(785, 782, 788), PackedInt32Array(788, 782, 789), PackedInt32Array(786, 787, 790), PackedInt32Array(790, 787, 781), PackedInt32Array(793, 792, 791), PackedInt32Array(790, 781, 779), PackedInt32Array(796, 795, 794), PackedInt32Array(779, 792, 790), PackedInt32Array(790, 792, 793), PackedInt32Array(796, 794, 785), PackedInt32Array(785, 794, 793), PackedInt32Array(785, 793, 791), PackedInt32Array(785, 791, 784), PackedInt32Array(798, 797, 799), PackedInt32Array(799, 797, 800), PackedInt32Array(801, 803, 802), PackedInt32Array(732, 726, 804), PackedInt32Array(804, 805, 732), PackedInt32Array(732, 805, 801), PackedInt32Array(801, 805, 803), PackedInt32Array(807, 806, 800), PackedInt32Array(800, 806, 799), PackedInt32Array(810, 809, 808), PackedInt32Array(811, 813, 812), PackedInt32Array(803, 805, 809), PackedInt32Array(809, 805, 808), PackedInt32Array(813, 811, 808), PackedInt32Array(808, 811, 800), PackedInt32Array(808, 800, 810), PackedInt32Array(810, 800, 797), PackedInt32Array(719, 814, 718), PackedInt32Array(718, 814, 815), PackedInt32Array(694, 695, 816), PackedInt32Array(816, 695, 817), PackedInt32Array(714, 715, 818), PackedInt32Array(818, 715, 819), PackedInt32Array(817, 820, 815), PackedInt32Array(822, 821, 823), PackedInt32Array(823, 821, 825), PackedInt32Array(823, 825, 815), PackedInt32Array(823, 815, 824), PackedInt32Array(824, 806, 826), PackedInt32Array(826, 806, 807), PackedInt32Array(824, 826, 823), PackedInt32Array(823, 828, 827), PackedInt32Array(831, 830, 829), PackedInt32Array(832, 818, 819), PackedInt32Array(833, 816, 817), PackedInt32Array(834, 831, 822), PackedInt32Array(822, 831, 829), PackedInt32Array(814, 832, 815), PackedInt32Array(815, 832, 819), PackedInt32Array(817, 815, 833), PackedInt32Array(823, 827, 822), PackedInt32Array(825, 833, 815), PackedInt32Array(815, 819, 824), PackedInt32Array(822, 829, 821), PackedInt32Array(821, 788, 825), PackedInt32Array(825, 788, 789), PackedInt32Array(838, 837, 835), PackedInt32Array(835, 837, 836), PackedInt32Array(844, 843, 839), PackedInt32Array(839, 843, 842), PackedInt32Array(839, 842, 840), PackedInt32Array(840, 842, 841), PackedInt32Array(835, 845, 838), PackedInt32Array(838, 845, 846), PackedInt32Array(846, 845, 847), PackedInt32Array(850, 849, 848), PackedInt32Array(648, 847, 647), PackedInt32Array(647, 847, 845), PackedInt32Array(852, 851, 853), PackedInt32Array(853, 851, 840), PackedInt32Array(849, 850, 839), PackedInt32Array(839, 850, 844), PackedInt32Array(841, 853, 840), PackedInt32Array(848, 854, 850), PackedInt32Array(850, 854, 847), PackedInt32Array(847, 854, 846), PackedInt32Array(846, 854, 855), PackedInt32Array(859, 858, 856), PackedInt32Array(856, 858, 857), PackedInt32Array(851, 852, 860), PackedInt32Array(860, 852, 863), PackedInt32Array(860, 863, 862), PackedInt32Array(860, 862, 861), PackedInt32Array(856, 864, 859), PackedInt32Array(859, 864, 862), PackedInt32Array(867, 866, 865), PackedInt32Array(868, 691, 692), PackedInt32Array(860, 869, 851), PackedInt32Array(854, 848, 865), PackedInt32Array(865, 848, 870), PackedInt32Array(873, 872, 871), PackedInt32Array(871, 872, 869), PackedInt32Array(871, 869, 860), PackedInt32Array(865, 870, 867), PackedInt32Array(867, 870, 874), PackedInt32Array(874, 870, 873), PackedInt32Array(873, 870, 872), PackedInt32Array(868, 692, 863), PackedInt32Array(863, 692, 862), PackedInt32Array(862, 864, 861), PackedInt32Array(876, 836, 875), PackedInt32Array(875, 836, 837), PackedInt32Array(736, 737, 877), PackedInt32Array(875, 878, 876), PackedInt32Array(876, 878, 879), PackedInt32Array(879, 878, 880), PackedInt32Array(880, 878, 881), PackedInt32Array(877, 883, 736), PackedInt32Array(736, 883, 882), PackedInt32Array(752, 879, 751), PackedInt32Array(751, 879, 880), PackedInt32Array(878, 884, 881), PackedInt32Array(881, 884, 883), PackedInt32Array(883, 884, 882), PackedInt32Array(886, 885, 858), PackedInt32Array(858, 885, 857), PackedInt32Array(888, 768, 889), PackedInt32Array(889, 768, 887), PackedInt32Array(886, 890, 885), PackedInt32Array(885, 890, 891), PackedInt32Array(891, 890, 893), PackedInt32Array(891, 893, 892), PackedInt32Array(891, 892, 894), PackedInt32Array(894, 892, 889), PackedInt32Array(894, 889, 887), PackedInt32Array(888, 767, 768), PackedInt32Array(757, 758, 890), PackedInt32Array(890, 758, 893)]
cell_height = 0.16
agent_radius = 1.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_bl8ed"]
albedo_color = Color(0.234375, 0.234375, 0.234375, 1)
metallic = 1.0
metallic_specular = 1.0
roughness = 0.0
subsurf_scatter_enabled = true
subsurf_scatter_strength = 1.0
subsurf_scatter_skin_mode = true
refraction_scale = -1.0

[sub_resource type="SphereMesh" id="SphereMesh_pixak"]
radius = 1.25
height = 2.5
radial_segments = 36
rings = 18

[sub_resource type="Shader" id="Shader_jjguu"]
code = "shader_type spatial;
render_mode unshaded;

uniform sampler2D screen_tex : hint_screen_texture;
uniform sampler2D depth_tex : hint_depth_texture;
uniform float scale;

bool hit_sphere(vec3 ray_origin, vec3 ray_dir, vec3 sphere_origin, float radius) {
	vec3 oc = ray_origin - sphere_origin;
	float a = dot(ray_dir, ray_dir);
	float b = 2.0 * dot(ray_dir, oc);
	float c = dot(oc, oc) - (radius * radius);
	float disc = (b * b) - 4.0 * a * c;
	return disc > 0.0;
}

vec3 get_world_position_from_uv(vec2 uv, float depth, mat4 inv_proj_m, mat4 inv_view_m) {
	vec4 ndc = vec4((uv * 2.0) - 1.0, depth, 1.0);
	vec4 view_p = inv_proj_m * ndc;
	view_p.xyz /= view_p.w;
	view_p = (inv_view_m * vec4(view_p.xyz, 1.0));
	return view_p.xyz;
}

vec2 get_uv_from_world_position(vec3 position_w, mat4 proj_m, mat4 view_m) {
	vec3 position_v = (view_m * vec4(position_w, 1.0)).xyz;
	vec4 position_cs = proj_m * vec4(position_v.xyz, 1.0);
	vec2 ndc = position_cs.xy / position_cs.w;
	return ndc.xy * 0.5 + 0.5;
}

float fresnel(float amount, vec3 normal, vec3 view) {
	return pow((1.0 - clamp(dot(normalize(normal), normalize(view)), 0.0, 1.0 )), amount);
}

void fragment() {
	float depth = texture(depth_tex, SCREEN_UV).x;
	vec3 frag_p = get_world_position_from_uv(SCREEN_UV, depth, INV_PROJECTION_MATRIX, INV_VIEW_MATRIX);
	vec3 ray_dir = normalize(frag_p - CAMERA_POSITION_WORLD);

	bool hit = hit_sphere(CAMERA_POSITION_WORLD, ray_dir, NODE_POSITION_WORLD, scale * .3);
	
	vec4 screen_color = texture(screen_tex, SCREEN_UV);
	vec3 color;
	if (hit) {
		color = vec3(0.0);
	}
	else {
		vec2 bh_p = get_uv_from_world_position(NODE_POSITION_WORLD, PROJECTION_MATRIX, VIEW_MATRIX);
		vec2 dis_dir = normalize(bh_p - SCREEN_UV) * 0.5;
		float f =  1.0 - fresnel(0.5, NORMAL, VIEW);
		
		float fov = atan(-1.0 / PROJECTION_MATRIX[1][1] * 2.0);
		float dist = distance(CAMERA_POSITION_WORLD, NODE_POSITION_WORLD);
		float s = (2.0 * dist * tan(fov * 0.5)) / scale;
		
		vec2 uv = SCREEN_UV + (dis_dir * (f / s));
		screen_color = texture(screen_tex, uv);
		color = vec3(screen_color.r, screen_color.g, screen_color.b);
		
	}
	ALBEDO = color;
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_8mi78"]
render_priority = 0
shader = SubResource("Shader_jjguu")
shader_parameter/scale = 10.52

[sub_resource type="SphereMesh" id="SphereMesh_gltbo"]
radius = 2.5
height = 2.5
radial_segments = 36
rings = 18
is_hemisphere = true

[sub_resource type="Shader" id="Shader_fyjc6"]
code = "shader_type spatial;
render_mode unshaded;

uniform sampler2D screen_tex : hint_screen_texture;
uniform sampler2D depth_tex : hint_depth_texture;
uniform float scale;

bool hit_sphere(vec3 ray_origin, vec3 ray_dir, vec3 sphere_origin, float radius) {
	vec3 oc = ray_origin - sphere_origin;
	float a = dot(ray_dir, ray_dir);
	float b = 2.0 * dot(ray_dir, oc);
	float c = dot(oc, oc) - (radius * radius);
	float disc = (b * b) - 4.0 * a * c;
	return disc > 0.0;
}

vec3 get_world_position_from_uv(vec2 uv, float depth, mat4 inv_proj_m, mat4 inv_view_m) {
	vec4 ndc = vec4((uv * 2.0) - 1.0, depth, 1.0);
	vec4 view_p = inv_proj_m * ndc;
	view_p.xyz /= view_p.w;
	view_p = (inv_view_m * vec4(view_p.xyz, 1.0));
	return view_p.xyz;
}

vec2 get_uv_from_world_position(vec3 position_w, mat4 proj_m, mat4 view_m) {
	vec3 position_v = (view_m * vec4(position_w, 1.0)).xyz;
	vec4 position_cs = proj_m * vec4(position_v.xyz, 1.0);
	vec2 ndc = position_cs.xy / position_cs.w;
	return ndc.xy * 0.5 + 0.5;
}

float fresnel(float amount, vec3 normal, vec3 view) {
	return pow((1.0 - clamp(dot(normalize(normal), normalize(view)), 0.0, 1.0 )), amount);
}

void fragment() {
	float depth = texture(depth_tex, SCREEN_UV).x;
	vec3 frag_p = get_world_position_from_uv(SCREEN_UV, depth, INV_PROJECTION_MATRIX, INV_VIEW_MATRIX);
	vec3 ray_dir = normalize(frag_p - CAMERA_POSITION_WORLD);

	bool hit = hit_sphere(CAMERA_POSITION_WORLD, ray_dir, NODE_POSITION_WORLD, scale * .3);

	vec4 screen_color = texture(screen_tex, SCREEN_UV);
	vec3 color;
	if (hit) {
		color = vec3(0.0);
	}
	else {
		vec2 bh_p = get_uv_from_world_position(NODE_POSITION_WORLD, PROJECTION_MATRIX, VIEW_MATRIX);
		vec2 dis_dir = normalize(bh_p - SCREEN_UV) * 0.5;
		float f =  1.0 - fresnel(0.5, NORMAL, VIEW);

		float fov = atan(-1.0 / PROJECTION_MATRIX[1][1] * 2.0);
		float dist = distance(CAMERA_POSITION_WORLD, NODE_POSITION_WORLD);
		float s = (2.0 * dist * tan(fov * 0.5)) / scale;

		vec2 uv = SCREEN_UV + (dis_dir * (f / s));
		screen_color = texture(screen_tex, uv);
		color = vec3(screen_color.r, screen_color.g, screen_color.b);

	}
	ALBEDO = color;
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_578bw"]
render_priority = 0
shader = SubResource("Shader_fyjc6")
shader_parameter/scale = 5.5

[sub_resource type="CylinderMesh" id="CylinderMesh_h3ud1"]
top_radius = 2.3
bottom_radius = 2.3
height = 20.0
radial_segments = 5
rings = 0
cap_top = false
cap_bottom = false

[sub_resource type="Shader" id="Shader_m6xwb"]
code = "shader_type spatial;
render_mode cull_disabled;

uniform vec3 effect_color: source_color = vec3(0.2, 0.3, 0.8);
uniform int octave_count: hint_range(1, 20) = 10;
uniform float amp_start = 0.5;
uniform float amp_coeff = 0.5;
uniform float freq_coeff = 2.0;
uniform float speed = 0.5;

uniform bool billboard_y = true;

varying float instance_id;

void vertex() {
     //Billboard Mode: Y-Billboard
	if (billboard_y) {
	    MODELVIEW_MATRIX = VIEW_MATRIX * mat4(
	            vec4(normalize(cross(vec3(0.0, 1.0, 0.0), MAIN_CAM_INV_VIEW_MATRIX[2].xyz)), 0.0),
	            vec4(0.0, 1.0, 0.0, 0.0),
	            vec4(normalize(cross(MAIN_CAM_INV_VIEW_MATRIX[0].xyz, vec3(0.0, 1.0, 0.0))), 0.0),
	            MODEL_MATRIX[3]);
	    MODELVIEW_NORMAL_MATRIX = mat3(MODELVIEW_MATRIX);
	}
	instance_id = float(INSTANCE_ID) / 10.0;
}

float hash12(vec2 x) {
    return fract(cos(mod(dot(x, vec2(13.9898, 8.141)), 3.14)) * 43758.5453);
}

vec2 hash22(vec2 uv) {
    uv = vec2(dot(uv, vec2(127.1,311.7)),
              dot(uv, vec2(269.5,183.3)));
    return 2.0 * fract(sin(uv) * 43758.5453123) - 1.0;
}

float noise(vec2 uv) {
    vec2 iuv = floor(uv);
    vec2 fuv = fract(uv);
    vec2 blur = smoothstep(0.0, 1.0, fuv);
    return mix(mix(dot(hash22(iuv + vec2(0.0,0.0)), fuv - vec2(0.0,0.0)),
                   dot(hash22(iuv + vec2(1.0,0.0)), fuv - vec2(1.0,0.0)), blur.x),
               mix(dot(hash22(iuv + vec2(0.0,1.0)), fuv - vec2(0.0,1.0)),
                   dot(hash22(iuv + vec2(1.0,1.0)), fuv - vec2(1.0,1.0)), blur.x), blur.y) + 0.5;
}

float fbm(vec2 uv, int octaves) {
    float value = 0.0;
    float amplitude = amp_start;
    for (int i = 0; i < octaves; i++) {
        value += amplitude * noise(uv);
        uv *= freq_coeff;
        amplitude *= amp_coeff;
    }
    return value;
}

void fragment() {
    vec2 uv = 2.0 * UV - 1.0;
    uv += 2.0 * fbm(uv + TIME * speed * ((instance_id + 1.0) / 10.0), octave_count) - 1.0;
    float dist = abs(uv.x);
    vec3 color = effect_color * mix(0.0, 0.05, hash12(vec2(TIME))) / dist;
    ALBEDO = color;
	ALPHA = color.r;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_jo3xm"]
render_priority = 0
shader = SubResource("Shader_m6xwb")
shader_parameter/effect_color = Color(0.8, 0.36, 0.2, 1)
shader_parameter/octave_count = 20
shader_parameter/amp_start = 0.291
shader_parameter/amp_coeff = 0.69
shader_parameter/freq_coeff = 1.325
shader_parameter/speed = 5.895
shader_parameter/billboard_y = false

[sub_resource type="Curve3D" id="Curve3D_yympt"]
_data = {
"points": PackedVector3Array(0, 0, 0, 0, 0, 0, 0, -9.53, -2.235, 0, 0, 0, 0, 0, 0, 0, 13.465, -1.94),
"tilts": PackedFloat32Array(0, 0)
}
point_count = 2

[node name="Temple" node_paths=PackedStringArray("nav_region") instance=ExtResource("1_ov5jx")]
nav_region = NodePath("NavRegion")

[node name="VoxelGI" type="VoxelGI" parent="." index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 12.0287, -0.891541)
layers = 9
subdiv = 3
size = Vector3(60.1624, 24.6513, 84.8595)
data = ExtResource("2_2cypd")

[node name="Env" type="WorldEnvironment" parent="." index="1"]
environment = ExtResource("2_ocyhd")

[node name="Sun" type="DirectionalLight3D" parent="." index="2"]
transform = Transform3D(0.951099, 0.114971, 0.28669, -0.238441, 0.863294, 0.444826, -0.196355, -0.491433, 0.848491, 0, 10, 0)
layers = 9
light_color = Color(1, 0.5125, 0.35, 1)
light_energy = 5.0
light_indirect_energy = 9.54
light_volumetric_fog_energy = 16.0
light_angular_distance = 1.5
light_bake_mode = 1
shadow_enabled = true
shadow_blur = 1.5
directional_shadow_blend_splits = true
directional_shadow_max_distance = 75.0

[node name="Lights" type="Node3D" parent="." index="3"]

[node name="Blue" type="Node3D" parent="Lights" index="0"]

[node name="LowerMonument" type="Node3D" parent="Lights/Blue" index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 19, 0, 32)

[node name="Upper" type="SpotLight3D" parent="Lights/Blue/LowerMonument" index="0"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 9, 0)
light_color = Color(0, 0.8, 1, 1)
light_energy = 2.0
light_indirect_energy = 5.0
light_volumetric_fog_energy = 5.0
light_bake_mode = 1
shadow_enabled = true
shadow_opacity = 0.54
distance_fade_enabled = true
distance_fade_begin = 12.0
distance_fade_shadow = 12.0
spot_range = 11.0
spot_attenuation = 0.05
spot_angle = 37.0
spot_angle_attenuation = 0.164939

[node name="Lower" type="SpotLight3D" parent="Lights/Blue/LowerMonument" index="1"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 1, 0)
light_color = Color(0, 0.8, 1, 1)
light_energy = 2.0
light_indirect_energy = 5.0
light_volumetric_fog_energy = 5.0
light_bake_mode = 1
shadow_enabled = true
shadow_opacity = 0.54
distance_fade_enabled = true
distance_fade_begin = 12.0
distance_fade_shadow = 12.0
spot_range = 11.0
spot_attenuation = 0.05
spot_angle = 37.0
spot_angle_attenuation = 0.164939

[node name="MidMonument" type="Node3D" parent="Lights/Blue" index="1"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 19, 0, 1)

[node name="Upper" type="SpotLight3D" parent="Lights/Blue/MidMonument" index="0"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 9, 0)
light_color = Color(0, 0.8, 1, 1)
light_energy = 2.0
light_indirect_energy = 5.0
light_volumetric_fog_energy = 5.0
light_bake_mode = 1
shadow_enabled = true
shadow_opacity = 0.54
distance_fade_enabled = true
distance_fade_begin = 12.0
distance_fade_shadow = 12.0
spot_range = 11.0
spot_attenuation = 0.05
spot_angle = 37.0
spot_angle_attenuation = 0.164939

[node name="Lower" type="SpotLight3D" parent="Lights/Blue/MidMonument" index="1"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 1, 0)
light_color = Color(0, 0.8, 1, 1)
light_energy = 2.0
light_indirect_energy = 5.0
light_volumetric_fog_energy = 5.0
light_bake_mode = 1
shadow_enabled = true
shadow_opacity = 0.54
distance_fade_enabled = true
distance_fade_begin = 12.0
distance_fade_shadow = 12.0
spot_range = 11.0
spot_attenuation = 0.05
spot_angle = 37.0
spot_angle_attenuation = 0.164939

[node name="BlueLightCorner1" type="OmniLight3D" parent="Lights/Blue" index="2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 25, 7, -16)
layers = 9
light_color = Color(0.26, 0.617666, 1, 1)
light_energy = 2.0
light_volumetric_fog_energy = 4.0
light_bake_mode = 1
shadow_enabled = true
shadow_opacity = 0.61
shadow_blur = 7.075
distance_fade_enabled = true
distance_fade_begin = 10.0
distance_fade_shadow = 10.0
omni_range = 4.5
omni_attenuation = 0.5

[node name="BlueLightCorner2" type="OmniLight3D" parent="Lights/Blue" index="3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 22, 7, -20)
layers = 9
light_color = Color(0.26, 0.617666, 1, 1)
light_energy = 2.0
light_volumetric_fog_energy = 4.0
light_bake_mode = 1
shadow_enabled = true
shadow_opacity = 0.61
shadow_blur = 7.075
distance_fade_enabled = true
distance_fade_begin = 10.0
distance_fade_shadow = 10.0
omni_range = 4.5
omni_attenuation = 0.5

[node name="BlueLightUpper" type="OmniLight3D" parent="Lights/Blue" index="4"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 22.5, 7.5, -34.5)
layers = 9
light_color = Color(0.258824, 0.619608, 1, 1)
light_energy = 4.0
light_indirect_energy = 2.0
light_volumetric_fog_energy = 2.0
light_projector = SubResource("NoiseTexture2D_y40c8")
light_bake_mode = 1
shadow_enabled = true
shadow_opacity = 0.61
shadow_blur = 2.315
distance_fade_enabled = true
distance_fade_begin = 15.0
distance_fade_shadow = 15.0
omni_range = 11.0
omni_attenuation = -0.482

[node name="White" type="Node3D" parent="Lights" index="1"]

[node name="LowerMonument" type="OmniLight3D" parent="Lights/White" index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.5, 34)
layers = 15
light_energy = 6.381
light_indirect_energy = 4.0
light_volumetric_fog_energy = 4.0
light_projector = SubResource("NoiseTexture2D_y40c8")
light_bake_mode = 1
shadow_enabled = true
shadow_reverse_cull_face = true
shadow_opacity = 0.79
shadow_blur = 7.147
distance_fade_enabled = true
distance_fade_begin = 10.0
distance_fade_shadow = 10.0
omni_range = 8.0
omni_attenuation = -0.595

[node name="Corner1" type="OmniLight3D" parent="Lights/White" index="1"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 8, 2.5, 27)
layers = 15
light_energy = 4.0
light_bake_mode = 1
shadow_enabled = true
shadow_opacity = 0.49
shadow_blur = 4.14
distance_fade_enabled = true
distance_fade_begin = 10.0
distance_fade_shadow = 10.0
omni_range = 4.5

[node name="Corner2" type="OmniLight3D" parent="Lights/White" index="2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 5, 2.5, 18)
layers = 15
light_energy = 4.0
light_bake_mode = 1
shadow_enabled = true
shadow_opacity = 0.49
shadow_blur = 4.14
distance_fade_enabled = true
distance_fade_begin = 10.0
distance_fade_shadow = 10.0
omni_range = 4.5

[node name="Corner3" type="OmniLight3D" parent="Lights/White" index="3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -8.00011, 2.5, 27)
layers = 15
light_energy = 4.0
light_bake_mode = 1
shadow_enabled = true
shadow_opacity = 0.49
shadow_blur = 4.14
distance_fade_enabled = true
distance_fade_begin = 10.0
distance_fade_shadow = 10.0
omni_range = 4.5

[node name="Corner4" type="OmniLight3D" parent="Lights/White" index="4"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -5, 2.5, 18)
layers = 15
light_energy = 4.0
light_bake_mode = 1
shadow_enabled = true
shadow_opacity = 0.49
shadow_blur = 4.14
distance_fade_enabled = true
distance_fade_begin = 10.0
distance_fade_shadow = 10.0
omni_range = 4.5

[node name="Center1" type="OmniLight3D" parent="Lights/White" index="5"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.5, -4)
layers = 15
light_energy = 2.846
light_volumetric_fog_energy = 3.0
light_projector = SubResource("NoiseTexture2D_y40c8")
light_bake_mode = 1
shadow_enabled = true
shadow_opacity = 0.61
shadow_blur = 2.315
distance_fade_enabled = true
distance_fade_begin = 10.0
distance_fade_shadow = 10.0
omni_range = 8.0
omni_attenuation = -0.319

[node name="Center2" type="OmniLight3D" parent="Lights/White" index="6"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 2.5, 4)
layers = 15
light_energy = 2.846
light_volumetric_fog_energy = 3.0
light_projector = SubResource("NoiseTexture2D_y40c8")
light_bake_mode = 1
shadow_enabled = true
shadow_opacity = 0.61
shadow_blur = 2.315
distance_fade_enabled = true
distance_fade_begin = 10.0
distance_fade_shadow = 10.0
omni_range = 8.0
omni_attenuation = -0.319

[node name="Red" type="Node3D" parent="Lights" index="2"]

[node name="LowerMonument" type="Node3D" parent="Lights/Red" index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -19, 0, 32)

[node name="Upper" type="SpotLight3D" parent="Lights/Red/LowerMonument" index="0"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 9, 0)
light_color = Color(1, 0.48, 0.48, 1)
light_energy = 2.0
light_indirect_energy = 5.0
light_volumetric_fog_energy = 3.0
light_bake_mode = 1
shadow_enabled = true
shadow_opacity = 0.52
distance_fade_enabled = true
distance_fade_begin = 12.0
distance_fade_shadow = 12.0
spot_range = 11.0
spot_attenuation = 0.51
spot_angle = 37.0

[node name="Lower" type="SpotLight3D" parent="Lights/Red/LowerMonument" index="1"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 1, 0)
light_color = Color(1, 0.48, 0.48, 1)
light_energy = 2.0
light_indirect_energy = 5.0
light_volumetric_fog_energy = 3.0
light_bake_mode = 1
shadow_enabled = true
shadow_opacity = 0.52
distance_fade_enabled = true
distance_fade_begin = 12.0
distance_fade_shadow = 12.0
spot_range = 11.0
spot_attenuation = 0.51
spot_angle = 37.0

[node name="MidMonument" type="Node3D" parent="Lights/Red" index="1"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -19.263, 0, 0.975646)

[node name="Upper" type="SpotLight3D" parent="Lights/Red/MidMonument" index="0"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 9, 0)
light_color = Color(1, 0.48, 0.48, 1)
light_energy = 2.0
light_indirect_energy = 5.0
light_volumetric_fog_energy = 3.0
light_bake_mode = 1
shadow_enabled = true
shadow_opacity = 0.52
distance_fade_enabled = true
distance_fade_begin = 12.0
distance_fade_shadow = 12.0
spot_range = 11.0
spot_attenuation = 0.51
spot_angle = 37.0

[node name="Lower" type="SpotLight3D" parent="Lights/Red/MidMonument" index="1"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 1, 0)
light_color = Color(1, 0.48, 0.48, 1)
light_energy = 2.0
light_indirect_energy = 5.0
light_volumetric_fog_energy = 3.0
light_bake_mode = 1
shadow_enabled = true
shadow_opacity = 0.52
distance_fade_enabled = true
distance_fade_begin = 12.0
distance_fade_shadow = 12.0
spot_range = 11.0
spot_attenuation = 0.51
spot_angle = 37.0

[node name="Corner1" type="OmniLight3D" parent="Lights/Red" index="2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -25, 7, -16)
layers = 9
light_color = Color(1, 0.72, 0.72, 1)
light_energy = 1.5
light_volumetric_fog_energy = 2.0
light_bake_mode = 1
shadow_enabled = true
shadow_opacity = 0.61
distance_fade_enabled = true
distance_fade_begin = 10.0
distance_fade_shadow = 10.0
omni_range = 4.5
omni_attenuation = 0.5

[node name="Corner2" type="OmniLight3D" parent="Lights/Red" index="3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -22, 7, -20)
layers = 9
light_color = Color(1, 0.72, 0.72, 1)
light_energy = 1.5
light_volumetric_fog_energy = 2.0
light_bake_mode = 1
shadow_enabled = true
shadow_opacity = 0.61
distance_fade_enabled = true
distance_fade_begin = 10.0
distance_fade_shadow = 10.0
omni_range = 4.5
omni_attenuation = 0.5

[node name="UpperMonument" type="OmniLight3D" parent="Lights/Red" index="4"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -22.5, 7.5, -34.5)
layers = 9
light_color = Color(1, 0.72, 0.72, 1)
light_energy = 4.0
light_indirect_energy = 4.0
light_volumetric_fog_energy = 3.0
light_projector = SubResource("NoiseTexture2D_y40c8")
light_bake_mode = 1
shadow_enabled = true
shadow_opacity = 0.61
shadow_blur = 3.235
distance_fade_enabled = true
distance_fade_begin = 15.0
distance_fade_shadow = 15.0
omni_range = 11.0
omni_attenuation = -0.236

[node name="NavRegion" type="NavigationRegion3D" parent="." index="4"]
navigation_mesh = SubResource("NavigationMesh_xuj3b")

[node name="TempleBase" parent="NavRegion" index="0" instance=ExtResource("2_dg5rw")]

[node name="Goddess" parent="NavRegion" index="1" instance=ExtResource("5_r73wd")]
transform = Transform3D(-4.5, 0, -6.79481e-07, 0, 4.5, 0, 6.79481e-07, 0, -4.5, 0, 10, -36.5)
metadata/_edit_group_ = true

[node name="Skeleton3D" parent="NavRegion/Goddess/Goddess" index="0"]
bones/1/position = Vector3(-1.4042e-05, 0.969949, -0.0154834)
bones/1/rotation = Quaternion(2.50984e-07, 0.999979, -0.00645833, 7.54963e-08)
bones/1/scale = Vector3(1, 1, 1)
bones/2/rotation = Quaternion(-0.0801557, 2.99206e-08, -2.50215e-07, 0.996782)
bones/3/rotation = Quaternion(0.0339095, 0.00321954, 0.000957238, 0.999419)
bones/4/rotation = Quaternion(-0.0477861, -0.00578023, -0.00163787, 0.998839)
bones/5/rotation = Quaternion(-0.10033, 0.00258924, -0.00169259, 0.994949)
bones/6/position = Vector3(-6.03716e-09, 0.0934399, 0.0284124)
bones/6/rotation = Quaternion(-0.158884, 0.00728247, -0.0058405, 0.987253)
bones/7/rotation = Quaternion(-0.48443, 0.570964, -0.526164, -0.403087)
bones/7/scale = Vector3(1, 1, 1)
bones/8/rotation = Quaternion(0.451839, -0.152782, -0.422425, 0.770751)
bones/8/scale = Vector3(1, 1, 1)
bones/9/rotation = Quaternion(-7.86426e-07, -3.81886e-09, -0.88464, 0.466275)
bones/10/position = Vector3(7.94388e-06, 0.293361, -1.63614e-05)
bones/10/rotation = Quaternion(-0.287624, -0.172982, -0.209702, 0.918355)
bones/11/position = Vector3(0.0268184, 0.0246444, 0.0157281)
bones/11/rotation = Quaternion(-0.0335608, 0.02369, -0.237404, 0.970542)
bones/11/scale = Vector3(1, 1, 1)
bones/12/position = Vector3(-1.55626e-06, 0.0418917, 1.14021e-05)
bones/12/rotation = Quaternion(1.58597e-06, -0.00117073, 9.02683e-07, 0.999999)
bones/12/scale = Vector3(1, 1, 1)
bones/13/position = Vector3(-3.10366e-06, 0.0341744, -7.64358e-06)
bones/13/rotation = Quaternion(-1.17105e-06, -0.000807231, 1.51417e-07, 1)
bones/13/scale = Vector3(1, 1, 1)
bones/14/position = Vector3(0.0226005, 0.0910793, 0.00516658)
bones/14/rotation = Quaternion(-0.0166905, 0.00181689, -1.93119e-07, 0.999859)
bones/15/rotation = Quaternion(-0.0166977, 0.00181697, 1.63089e-07, 0.999859)
bones/16/rotation = Quaternion(-0.0166809, 0.0018167, -1.19209e-07, 0.999859)
bones/17/position = Vector3(2.17054e-06, 0.0953223, -1.17896e-05)
bones/17/rotation = Quaternion(-0.0166904, 0.00181698, 1.5298e-07, 0.999859)
bones/18/rotation = Quaternion(-0.0166935, 0.00181684, -2.6021e-07, 0.999859)
bones/19/rotation = Quaternion(-0.0166894, 0.0018167, 2.99018e-08, 0.999859)
bones/20/position = Vector3(-0.018649, 0.0910337, 0.000418538)
bones/20/rotation = Quaternion(-0.0166914, 0.00181698, -2.75363e-07, 0.999859)
bones/21/rotation = Quaternion(-0.0166935, 0.00181685, -7.0117e-09, 0.999859)
bones/21/scale = Vector3(1, 1, 1)
bones/22/rotation = Quaternion(-0.0166893, 0.00181679, -8.98764e-09, 0.999859)
bones/23/position = Vector3(-0.0380605, 0.0807654, 0.00485502)
bones/23/rotation = Quaternion(-0.0166909, 0.0018169, 2.25936e-07, 0.999859)
bones/24/rotation = Quaternion(-0.0166934, 0.00181692, -3.56261e-07, 0.999859)
bones/25/rotation = Quaternion(-0.0166858, 0.0018166, -2.51779e-07, 0.999859)
bones/26/rotation = Quaternion(-0.223818, 0.604013, -0.378798, 0.664519)
bones/26/scale = Vector3(1, 1, 1)
bones/27/rotation = Quaternion(0.00150165, 0.00218102, -0.682875, 0.73053)
bones/28/rotation = Quaternion(-0.311652, 0.671618, 0.183935, 0.646507)
bones/29/rotation = Quaternion(0.000815333, 0.094366, -0.0740884, 0.992777)
bones/30/rotation = Quaternion(0.0295017, -0.00973738, -0.0685082, 0.997167)
bones/31/rotation = Quaternion(0.0511163, -0.0123291, -0.121441, 0.991205)
bones/31/scale = Vector3(1, 1, 1)
bones/32/rotation = Quaternion(-0.0355458, -0.00113044, -0.00246912, 0.999364)
bones/33/rotation = Quaternion(-0.0355549, -0.00127479, -0.00204837, 0.999365)
bones/34/rotation = Quaternion(-0.035537, -0.00114825, -0.00239002, 0.999365)
bones/35/rotation = Quaternion(-0.0355457, -0.0010233, -0.00281058, 0.999364)
bones/36/rotation = Quaternion(-0.0355492, -0.00148735, -0.0014558, 0.999366)
bones/37/rotation = Quaternion(-0.0355489, -0.00105561, -0.00262016, 0.999364)
bones/38/rotation = Quaternion(-0.0355478, -0.00123151, -0.00214514, 0.999365)
bones/39/rotation = Quaternion(-0.0355481, -0.0011012, -0.0025234, 0.999364)
bones/39/scale = Vector3(1, 1, 1)
bones/40/rotation = Quaternion(-0.0355473, -0.00115158, -0.00241872, 0.999364)
bones/41/rotation = Quaternion(-0.0355418, -0.00134708, -0.00177641, 0.999366)
bones/42/rotation = Quaternion(-0.0355537, -0.00141364, -0.00143378, 0.999366)
bones/43/rotation = Quaternion(-0.0355462, -0.000927834, -0.00277156, 0.999364)
bones/44/rotation = Quaternion(0.104479, 0.635877, -0.000498298, 0.764686)
bones/44/scale = Vector3(1, 1, 1)
bones/45/rotation = Quaternion(-0.0010041, -0.00265748, -0.455358, 0.890304)
bones/46/rotation = Quaternion(-0.281955, 0.703746, 0.290116, 0.584017)
bones/47/rotation = Quaternion(0.6618, -0.270672, -0.066806, 0.695913)
bones/48/rotation = Quaternion(-0.194879, -0.03129, 0.339796, 0.919555)
bones/48/scale = Vector3(1, 1, 1)
bones/49/rotation = Quaternion(-0.135242, -0.0193524, 0.234142, 0.962555)
bones/49/scale = Vector3(1, 1, 1)
bones/50/rotation = Quaternion(0.0250771, -0.00728842, -0.139236, 0.989915)
bones/51/rotation = Quaternion(0.0674533, 0.0168808, 0.0175365, 0.997426)
bones/51/scale = Vector3(1, 1, 1)
bones/52/rotation = Quaternion(0.145293, 0.0392041, 0.0377, 0.987893)
bones/53/rotation = Quaternion(0.0904522, 0.00399597, -0.0246634, 0.995587)
bones/53/scale = Vector3(1, 1, 1)
bones/54/rotation = Quaternion(0.0891532, 0.0106062, 0.0191689, 0.995777)
bones/54/scale = Vector3(1, 1, 1)
bones/55/rotation = Quaternion(0.0891541, 0.0101204, 0.0180198, 0.995803)
bones/56/rotation = Quaternion(0.534019, -0.0778732, 0.00564254, 0.84186)
bones/57/rotation = Quaternion(0.443906, 0.0813847, -0.0847248, 0.888339)
bones/57/scale = Vector3(1, 1, 1)
bones/58/rotation = Quaternion(0.129989, 0.0238565, -0.0248827, 0.990916)
bones/59/rotation = Quaternion(-0.0032118, 0.00760297, 0.138614, 0.990312)
bones/60/rotation = Quaternion(0.169068, -0.00776288, -0.0284526, 0.985163)
bones/61/rotation = Quaternion(0.0979241, -0.00176828, -0.017664, 0.995036)
bones/62/rotation = Quaternion(0.484423, 0.57097, -0.526162, 0.403089)
bones/62/scale = Vector3(1, 1, 1)
bones/63/rotation = Quaternion(0.473149, 0.153998, 0.413019, 0.762777)
bones/64/rotation = Quaternion(2.06364e-05, 2.05334e-08, 0.884827, 0.46592)
bones/65/rotation = Quaternion(-0.292535, 0.172096, 0.221678, 0.914147)
bones/66/position = Vector3(-0.0268176, 0.0246589, 0.0157775)
bones/66/rotation = Quaternion(-0.0567093, -0.0205349, 0.239182, 0.9691)
bones/67/rotation = Quaternion(1.6059e-06, 0.00104297, -7.08628e-07, 1)
bones/68/rotation = Quaternion(9.9236e-07, 0.000745074, -3.20385e-07, 1)
bones/69/position = Vector3(-0.0225986, 0.0910907, 0.00519646)
bones/69/rotation = Quaternion(7.43554e-08, 1.56135e-07, 4.91244e-07, 1)
bones/70/rotation = Quaternion(3.51143e-07, -7.12381e-08, 3.89533e-07, 1)
bones/71/rotation = Quaternion(2.22773e-06, -7.55485e-08, -8.28007e-09, 1)
bones/72/position = Vector3(-6.0401e-07, 0.0953309, 1.5701e-05)
bones/72/rotation = Quaternion(-6.69353e-07, 2.10248e-08, -2.17184e-07, 1)
bones/73/rotation = Quaternion(3.9902e-06, 6.30217e-08, 3.05197e-07, 1)
bones/74/rotation = Quaternion(-4.03789e-06, -1.22354e-07, -3.70903e-07, 1)
bones/75/position = Vector3(0.0186506, 0.0910425, 0.00044629)
bones/78/position = Vector3(0.038063, 0.080775, 0.00488468)
bones/78/rotation = Quaternion(1.08953e-06, 1.60374e-07, 2.82656e-07, 1)
bones/79/rotation = Quaternion(-5.95796e-06, -1.90349e-07, -5.46352e-07, 1)
bones/80/rotation = Quaternion(8.60396e-06, 6.45354e-07, 2.46357e-07, 1)
bones/81/rotation = Quaternion(0.00798341, -0.453133, -0.0311249, 0.890864)
bones/81/scale = Vector3(1, 1, 1)
bones/82/rotation = Quaternion(0.000956453, -0.00269596, 0.429716, 0.90296)
bones/83/rotation = Quaternion(-0.271029, -0.856123, -0.309083, 0.313151)
bones/84/rotation = Quaternion(0.645176, 0.0473035, -0.0793986, 0.758424)
bones/85/rotation = Quaternion(-0.37997, 0.0716147, -0.260373, 0.884703)
bones/85/scale = Vector3(1, 1, 1)
bones/86/rotation = Quaternion(-0.114759, 0.0290483, -0.0937799, 0.98853)
bones/86/scale = Vector3(1, 1, 1)
bones/87/rotation = Quaternion(0.143075, -0.00262307, 0.167937, 0.975356)
bones/88/rotation = Quaternion(0.109749, -0.0261831, -0.0154363, 0.993495)
bones/89/rotation = Quaternion(0.109747, -0.0261275, -0.0156082, 0.993494)
bones/90/rotation = Quaternion(0.124168, -0.00464712, 0.0358466, 0.991603)
bones/91/rotation = Quaternion(0.111039, -0.0188454, -0.016887, 0.993494)
bones/92/rotation = Quaternion(0.11103, -0.01885, -0.0168894, 0.993495)
bones/93/rotation = Quaternion(0.420449, -0.275209, -0.292847, 0.813464)
bones/94/rotation = Quaternion(0.414841, 0.0370412, -0.12516, 0.900483)
bones/95/rotation = Quaternion(0.27505, 0.0830839, -0.12627, 0.949474)
bones/96/rotation = Quaternion(-0.0605481, 0.000974466, -0.284329, 0.956812)
bones/97/rotation = Quaternion(0.0788561, 0.00213649, 0.014145, 0.996783)
bones/97/scale = Vector3(1, 1, 1)
bones/98/rotation = Quaternion(0.0788742, 0.00210864, 0.0142964, 0.99678)
bones/99/rotation = Quaternion(0.192398, 0.65923, 0.174463, 0.705664)
bones/99/scale = Vector3(1, 1, 1)
bones/100/rotation = Quaternion(-0.00131982, 0.00237537, 0.60565, 0.795726)
bones/101/rotation = Quaternion(-0.0949214, -0.606634, -0.178914, 0.768749)
bones/102/rotation = Quaternion(0.0765946, 0.0577808, 0.240745, 0.965835)
bones/102/scale = Vector3(1, 1, 1)
bones/103/rotation = Quaternion(-0.000676029, -0.0015858, -0.00844224, 0.999963)
bones/103/scale = Vector3(1, 1, 1)
bones/104/rotation = Quaternion(-0.000531165, -0.00121688, -0.0062401, 0.99998)
bones/105/rotation = Quaternion(-0.0554836, 0.000256154, -4.49845e-05, 0.99846)
bones/106/rotation = Quaternion(-0.0554791, 0.00031519, 0.000100717, 0.99846)
bones/107/rotation = Quaternion(-0.0554803, 0.000252973, -6.76147e-05, 0.99846)
bones/108/rotation = Quaternion(-0.0554853, 0.00026137, -3.22617e-05, 0.998459)
bones/109/rotation = Quaternion(-0.0554774, 0.00028048, 2.17234e-05, 0.99846)
bones/110/rotation = Quaternion(-0.0554851, 0.000282372, 2.09595e-05, 0.99846)
bones/111/rotation = Quaternion(-0.0554843, 0.000278007, 6.6204e-06, 0.99846)
bones/112/rotation = Quaternion(-0.0554778, 0.000275419, -2.84437e-07, 0.99846)
bones/113/rotation = Quaternion(-0.0554869, 0.000274827, -2.52163e-07, 0.998459)
bones/114/rotation = Quaternion(-0.0554892, 0.00115454, 0.00199529, 0.998457)
bones/115/rotation = Quaternion(-0.0554862, 0.000410891, -0.000295731, 0.998459)
bones/115/scale = Vector3(1, 1, 1)
bones/116/rotation = Quaternion(-0.0554689, 0.000450488, -0.000145273, 0.99846)
bones/117/rotation = Quaternion(-0.209793, 0.345338, 0.911906, 0.0718045)
bones/118/rotation = Quaternion(-0.636761, -6.33453e-08, 6.69528e-08, 0.771061)
bones/119/rotation = Quaternion(0.213175, -0.197858, -0.100108, 0.951518)
bones/119/scale = Vector3(1, 1, 1)
bones/120/rotation = Quaternion(0.115153, -2.44991e-07, 3.23843e-07, 0.993348)
bones/120/scale = Vector3(1, 1, 1)
bones/121/rotation = Quaternion(0.208105, 0.485386, 0.843029, -0.101958)
bones/121/scale = Vector3(1, 1, 1)
bones/122/rotation = Quaternion(-0.827986, -1.11115e-07, 2.80138e-07, 0.560749)
bones/123/rotation = Quaternion(0.146156, 0.157719, 0.169787, 0.961736)
bones/124/rotation = Quaternion(0.253369, -0.00914327, 0.00452193, 0.967316)
bones/125/position = Vector3(-0.0265219, 1.33501, -0.174795)
bones/125/rotation = Quaternion(-0.00937483, -0.707074, 0.0468872, -0.705521)
bones/126/position = Vector3(0.44215, 0.838784, -0.111838)
bones/126/rotation = Quaternion(0.707107, 5.33851e-08, 5.33851e-08, 0.707107)
bones/127/position = Vector3(0.566497, 1.63289, 0.0407088)
bones/127/scale = Vector3(1, 1, 1)
bones/128/position = Vector3(0.39553, 1.10292, 0.0968199)
bones/129/position = Vector3(-0.39937, 0.834162, -0.119893)
bones/129/rotation = Quaternion(0.707107, 5.33851e-08, 5.33851e-08, 0.707107)
bones/130/position = Vector3(-0.453063, 1.11391, 0.278409)
bones/131/position = Vector3(-0.729743, 1.11596, 0.175275)
bones/132/position = Vector3(0.0276571, 1.335, -0.174208)
bones/132/rotation = Quaternion(0.0310125, -0.709219, 0.0674452, 0.701069)
bones/133/position = Vector3(0.135506, 1.77361, 0.0062605)
bones/133/rotation = Quaternion(0.0215016, -0.683542, -0.00131625, 0.729594)
bones/133/scale = Vector3(1, 1, 1)
bones/134/position = Vector3(0.632348, 1.50421, 0.0583928)
bones/134/rotation = Quaternion(0.522879, 0.458819, 0.528955, -0.486095)
bones/134/scale = Vector3(1, 1, 1)
bones/135/position = Vector3(-0.63924, 1.50675, 0.0458182)
bones/135/rotation = Quaternion(-0.539399, 0.372313, 0.562519, 0.503989)
bones/136/position = Vector3(-0.289248, 0.940322, 0.0465405)
bones/136/rotation = Quaternion(0.706329, -0.0326141, 0.706533, 0.0291167)
bones/136/scale = Vector3(1, 1, 1)
bones/137/position = Vector3(0.082078, 0.217122, -0.0127613)
bones/137/rotation = Quaternion(0.99347, -3.13993e-07, -9.44305e-07, 0.114092)
bones/138/position = Vector3(-0.0820772, 0.404723, -0.0263257)
bones/138/rotation = Quaternion(0.952717, -4.80369e-07, -1.29769e-06, 0.303859)
bones/138/scale = Vector3(1, 1, 1)
bones/139/position = Vector3(0.430519, 0.344448, -0.736951)
bones/140/position = Vector3(-0.545853, 0.359766, -0.948247)

[node name="Joints" parent="NavRegion/Goddess/Goddess/Skeleton3D" index="0"]
sorting_offset = 1.0
cast_shadow = 0
ignore_occlusion_culling = true
surface_material_override/0 = SubResource("StandardMaterial3D_bl8ed")

[node name="Surface" parent="NavRegion/Goddess/Goddess/Skeleton3D" index="1"]
sorting_offset = 1.0
ignore_occlusion_culling = true
surface_material_override/0 = ExtResource("6_suoll")

[node name="BoneAttachment3D" type="BoneAttachment3D" parent="NavRegion/Goddess/Goddess/Skeleton3D" index="2"]
transform = Transform3D(-1, 5.02933e-07, 1.47748e-07, 5.00982e-07, 0.999917, -0.0129164, -1.54231e-07, -0.0129164, -0.999917, -1.4042e-05, 0.969949, -0.0154834)
bone_name = "mixamorig_Hips"
bone_idx = 1

[node name="OmniLight3D" type="OmniLight3D" parent="NavRegion/Goddess/Goddess/Skeleton3D/BoneAttachment3D" index="0"]
layers = 9
light_color = Color(0.51, 0.38675, 0.2142, 1)
light_energy = 3.485
light_indirect_energy = 5.0
light_volumetric_fog_energy = 5.0
light_size = 1.0
distance_fade_enabled = true
distance_fade_begin = 25.0
omni_range = 12.0
omni_attenuation = -0.091

[node name="Refraction" type="MeshInstance3D" parent="NavRegion/Goddess/Goddess/Skeleton3D/BoneAttachment3D" index="1"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -3.38726e-15, -0.0671535, -1.74623e-10)
cast_shadow = 0
mesh = SubResource("SphereMesh_pixak")
surface_material_override/0 = SubResource("ShaderMaterial_8mi78")

[node name="AnimationPlayer" parent="NavRegion/Goddess" index="2"]
autoplay = "HoverIdle"
playback_auto_capture = false
speed_scale = 0.5

[node name="Refraction" type="MeshInstance3D" parent="NavRegion" index="2"]
transform = Transform3D(1, 0, 0, 0, -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 8, -13)
cast_shadow = 0
mesh = SubResource("SphereMesh_gltbo")
surface_material_override/0 = SubResource("ShaderMaterial_578bw")

[node name="Static" type="MeshInstance3D" parent="NavRegion/Refraction" index="0"]
transform = Transform3D(1, 0, 0, 0, 0.973762, -0.227569, 0, 0.227569, 0.973762, 0, 9.56742, 4.02324)
visible = false
mesh = SubResource("CylinderMesh_h3ud1")
surface_material_override/0 = SubResource("ShaderMaterial_jo3xm")
script = ExtResource("8_0k2kh")
process_in_editor = true

[node name="SFXPath" type="Path3D" parent="NavRegion/Refraction/Static" index="0"]
curve = SubResource("Curve3D_yympt")

[node name="FlashSFX" type="AudioStreamPlayer3D" parent="NavRegion/Refraction/Static" index="1"]
stream = ExtResource("8_f8epm")
max_distance = 25.0
max_polyphony = 3
bus = &"SFX"

[node name="Players" parent="." index="5" node_paths=PackedStringArray("level")]
level = NodePath("..")

[node name="Marker3D" type="Marker3D" parent="Spawns" index="0"]
transform = Transform3D(1.19209e-07, 0, -1, 0, 1, 0, 1, 0, 1.19209e-07, -10, 5, -31)

[node name="Marker3D2" type="Marker3D" parent="Spawns" index="1"]
transform = Transform3D(-4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 10, 5.106, -31)

[node name="Marker3D3" type="Marker3D" parent="Spawns" index="2"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 2.5, -31)

[node name="Marker3D9" type="Marker3D" parent="Spawns" index="3"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 5, -37)

[node name="Marker3D10" type="Marker3D" parent="Spawns" index="4"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 10, 5, -37)

[node name="Marker3D11" type="Marker3D" parent="Spawns" index="5"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, -10, 5, -37)

[node name="Marker3D6" type="Marker3D" parent="Spawns" index="6"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 0, -23)

[node name="Marker3D7" type="Marker3D" parent="Spawns" index="7"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, -10, 0, -27)

[node name="Marker3D12" type="Marker3D" parent="Spawns" index="8"]
transform = Transform3D(0.707107, 0, -0.707107, 0, 1, 0, 0.707107, 0, 0.707107, -10, 0, -17)

[node name="Marker3D13" type="Marker3D" parent="Spawns" index="9"]
transform = Transform3D(0.707107, 0, 0.707107, 0, 1, 0, -0.707107, 0, 0.707107, 10, 0, -17)

[node name="Marker3D8" type="Marker3D" parent="Spawns" index="10"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 10, 0, -27)

[node name="Marker3D14" type="Marker3D" parent="Spawns" index="11"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 3, 0, -10)

[node name="Marker3D15" type="Marker3D" parent="Spawns" index="12"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, -3, 0, -10)

[node name="Marker3D16" type="Marker3D" parent="Spawns" index="13"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -3, 0, 10)

[node name="Marker3D17" type="Marker3D" parent="Spawns" index="14"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 3, 0, 10)

[node name="Marker3D18" type="Marker3D" parent="Spawns" index="15"]
transform = Transform3D(0.707107, 0, 0.707107, 0, 1, 0, -0.707107, 0, 0.707107, 10, 0, 6)

[node name="Marker3D19" type="Marker3D" parent="Spawns" index="16"]
transform = Transform3D(0.707107, 0, -0.707107, 0, 1, 0, 0.707107, 0, 0.707107, -10, 0, 6)

[node name="Marker3D20" type="Marker3D" parent="Spawns" index="17"]
transform = Transform3D(-0.707107, 0, 0.707107, 0, 1, 0, -0.707107, 0, -0.707107, -8, 0, -1)

[node name="Marker3D21" type="Marker3D" parent="Spawns" index="18"]
transform = Transform3D(-0.707107, 0, -0.707107, 0, 1, 0, 0.707107, 0, -0.707107, 8, 0, -1)

[node name="Marker3D22" type="Marker3D" parent="Spawns" index="19"]
transform = Transform3D(-0.707107, 0, -0.707107, 0, 1, 0, 0.707107, 0, -0.707107, -23, 0, -4)

[node name="Marker3D23" type="Marker3D" parent="Spawns" index="20"]
transform = Transform3D(-0.707107, 0, 0.707107, 0, 1, 0, -0.707107, 0, -0.707107, 23, 0, -4)

[node name="Marker3D24" type="Marker3D" parent="Spawns" index="21"]
transform = Transform3D(0.707107, 0, 0.707107, 0, 1, 0, -0.707107, 0, 0.707107, 23, 0, 6)

[node name="Marker3D25" type="Marker3D" parent="Spawns" index="22"]
transform = Transform3D(0.707107, 0, -0.707107, 0, 1, 0, 0.707107, 0, 0.707107, -23, 0, 6)

[node name="Marker3D26" type="Marker3D" parent="Spawns" index="23"]
transform = Transform3D(0.707107, 0, -0.707107, 0, 1, 0, 0.707107, 0, 0.707107, -26.75, 5, 9.75)

[node name="Marker3D27" type="Marker3D" parent="Spawns" index="24"]
transform = Transform3D(0.707477, 0, 0.706736, 0, 1, 0, -0.706736, 0, 0.707477, 26.75, 5, 9.75)

[node name="Marker3D28" type="Marker3D" parent="Spawns" index="25"]
transform = Transform3D(-0.707107, 0, -0.707107, 0, 1, 0, 0.707107, 0, -0.707107, 15, 0, -8)

[node name="Marker3D29" type="Marker3D" parent="Spawns" index="26"]
transform = Transform3D(-0.707107, 0, 0.707107, 0, 1, 0, -0.707107, 0, -0.707107, -15, 0, -8)

[node name="Marker3D30" type="Marker3D" parent="Spawns" index="27"]
transform = Transform3D(-1, 0, 0, 0, 1, 0, 0, 0, -1, -27, 5, -12)

[node name="Marker3D31" type="Marker3D" parent="Spawns" index="28"]
transform = Transform3D(-1, 0, 0, 0, 1, 0, 0, 0, -1, 27, 5, -12)

[node name="Marker3D32" type="Marker3D" parent="Spawns" index="29"]
transform = Transform3D(-1, 0, 0, 0, 1, 0, 0, 0, -1, 27, 5, -18)

[node name="Marker3D35" type="Marker3D" parent="Spawns" index="30"]
transform = Transform3D(-1, 0, 0, 0, 1, 0, 0, 0, -1, -27, 5, -18)

[node name="Marker3D33" type="Marker3D" parent="Spawns" index="31"]
transform = Transform3D(1, 0, 8.74228e-08, 0, 1, 0, -8.74228e-08, 0, 1, 20, 5, -24)

[node name="Marker3D34" type="Marker3D" parent="Spawns" index="32"]
transform = Transform3D(1, 0, 8.74228e-08, 0, 1, 0, -8.74228e-08, 0, 1, -20, 5, -24)

[node name="Marker3D36" type="Marker3D" parent="Spawns" index="33"]
transform = Transform3D(0.707107, 0, -0.707107, 0, 1, 0, 0.707107, 0, 0.707107, -25, 5, -28)

[node name="Marker3D37" type="Marker3D" parent="Spawns" index="34"]
transform = Transform3D(0.707107, 0, 0.707107, 0, 1, 0, -0.707107, 0, 0.707107, 25, 5, -28)

[node name="Marker3D38" type="Marker3D" parent="Spawns" index="35"]
transform = Transform3D(-0.707107, 0, 0.707107, 0, 1, 0, -0.707107, 0, -0.707107, 25, 5, -37)

[node name="Marker3D39" type="Marker3D" parent="Spawns" index="36"]
transform = Transform3D(-0.707106, 0, -0.707107, 0, 1, 0, 0.707107, 0, -0.707106, -25, 5, -37)

[node name="Marker3D40" type="Marker3D" parent="Spawns" index="37"]
transform = Transform3D(3.57628e-07, 0, -1, 0, 1, 0, 1, 0, 3.57628e-07, -25, 5, -32.5)

[node name="Marker3D41" type="Marker3D" parent="Spawns" index="38"]
transform = Transform3D(-2.70205e-07, 0, 1, 0, 1, 0, -1, 0, -2.70205e-07, 25, 5, -32.5)

[node name="Marker3D42" type="Marker3D" parent="Spawns" index="39"]
transform = Transform3D(0.707107, 0, -0.707107, 0, 1, 0, 0.707107, 0, 0.707107, 15, 5, -32)

[node name="Marker3D43" type="Marker3D" parent="Spawns" index="40"]
transform = Transform3D(0.707106, 0, 0.707107, 0, 1, 0, -0.707107, 0, 0.707106, -15, 5, -32)

[node name="Marker3D44" type="Marker3D" parent="Spawns" index="41"]
transform = Transform3D(1, 0, 3.57628e-07, 0, 1, 0, -3.57628e-07, 0, 1, -15, 5, 15)

[node name="Marker3D49" type="Marker3D" parent="Spawns" index="42"]
transform = Transform3D(1, 0, 3.57628e-07, 0, 1, 0, -3.57628e-07, 0, 1, 15, 5, 15)

[node name="Marker3D45" type="Marker3D" parent="Spawns" index="43"]
transform = Transform3D(-1, 0, -4.45051e-07, 0, 1, 0, 4.45051e-07, 0, -1, -21, 5, 15)

[node name="Marker3D50" type="Marker3D" parent="Spawns" index="44"]
transform = Transform3D(-1, 0, -4.45051e-07, 0, 1, 0, 4.45051e-07, 0, -1, 21, 5, 15)

[node name="Marker3D46" type="Marker3D" parent="Spawns" index="45"]
transform = Transform3D(0.707107, 0, -0.707106, 0, 1, 0, 0.707106, 0, 0.707107, -21, 0, 36)

[node name="Marker3D51" type="Marker3D" parent="Spawns" index="46"]
transform = Transform3D(0.707106, 0, 0.707107, 0, 1, 0, -0.707107, 0, 0.707106, 21, 0, 36)

[node name="Marker3D47" type="Marker3D" parent="Spawns" index="47"]
transform = Transform3D(0.707106, 0, 0.707107, 0, 1, 0, -0.707107, 0, 0.707106, -15, 0, 36)

[node name="Marker3D60" type="Marker3D" parent="Spawns" index="48"]
transform = Transform3D(-4.76837e-07, 0, 1, 0, 1, 0, -1, 0, -4.76837e-07, -15, 0, 28)

[node name="Marker3D61" type="Marker3D" parent="Spawns" index="49"]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 15, 0, 28)

[node name="Marker3D52" type="Marker3D" parent="Spawns" index="50"]
transform = Transform3D(0.707107, 0, -0.707106, 0, 1, 0, 0.707106, 0, 0.707107, 15, 0, 36)

[node name="Marker3D48" type="Marker3D" parent="Spawns" index="51"]
transform = Transform3D(-1, 0, -5.20549e-07, 0, 1, 0, 5.20549e-07, 0, -1, -16, 0, 22)

[node name="Marker3D53" type="Marker3D" parent="Spawns" index="52"]
transform = Transform3D(-1, 0, -5.20549e-07, 0, 1, 0, 5.20549e-07, 0, -1, 16, 0, 22)

[node name="Marker3D54" type="Marker3D" parent="Spawns" index="53"]
transform = Transform3D(-0.707107, 0, 0.707106, 0, 1, 0, -0.707106, 0, -0.707107, 3, 0, 17)

[node name="Marker3D55" type="Marker3D" parent="Spawns" index="54"]
transform = Transform3D(-0.707106, 0, -0.707107, 0, 1, 0, 0.707107, 0, -0.707106, -3, 0, 17)

[node name="Marker3D56" type="Marker3D" parent="Spawns" index="55"]
transform = Transform3D(-1, 0, -5.96046e-07, 0, 1, 0, 5.96046e-07, 0, -1, -10, 0, 28.5)

[node name="Marker3D57" type="Marker3D" parent="Spawns" index="56"]
transform = Transform3D(-1, 0, -5.96046e-07, 0, 1, 0, 5.96046e-07, 0, -1, 10, 0, 28.5)

[node name="Marker3D58" type="Marker3D" parent="Spawns" index="57"]
transform = Transform3D(0.707106, 0, 0.707107, 0, 1, 0, -0.707107, 0, 0.707106, 10, 0, 36)

[node name="Marker3D59" type="Marker3D" parent="Spawns" index="58"]
transform = Transform3D(0.707107, 0, -0.707106, 0, 1, 0, 0.707106, 0, 0.707107, -10, 0, 36)

[node name="NavPoints" parent="." index="8"]
visible = false

[node name="Marker3D" type="Marker3D" parent="NavPoints" index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -13.5)

[node name="Marker3D9" type="Marker3D" parent="NavPoints" index="1"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.5, -27)

[node name="Marker3D10" type="Marker3D" parent="NavPoints" index="2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.5, -31)

[node name="Marker3D11" type="Marker3D" parent="NavPoints" index="3"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -8, 5, -31)

[node name="Marker3D12" type="Marker3D" parent="NavPoints" index="4"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 8, 5, -31)

[node name="Marker3D13" type="Marker3D" parent="NavPoints" index="5"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 12.5, 5, -36.5)

[node name="Marker3D14" type="Marker3D" parent="NavPoints" index="6"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -12.5, 5, -36.5)

[node name="Marker3D15" type="Marker3D" parent="NavPoints" index="7"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -20, 5, -26)

[node name="Marker3D16" type="Marker3D" parent="NavPoints" index="8"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 20, 5, -26)

[node name="Marker3D17" type="Marker3D" parent="NavPoints" index="9"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 20, 5, -18)

[node name="Marker3D18" type="Marker3D" parent="NavPoints" index="10"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -20, 5, -18)

[node name="Marker3D19" type="Marker3D" parent="NavPoints" index="11"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -27, 5, -18)

[node name="Marker3D20" type="Marker3D" parent="NavPoints" index="12"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 27, 5, -18)

[node name="Marker3D21" type="Marker3D" parent="NavPoints" index="13"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 27, 5, -10)

[node name="Marker3D22" type="Marker3D" parent="NavPoints" index="14"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -27, 5, -10)

[node name="Marker3D23" type="Marker3D" parent="NavPoints" index="15"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -15, 0, -8)

[node name="Marker3D24" type="Marker3D" parent="NavPoints" index="16"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 15, 0, -8)

[node name="Marker3D25" type="Marker3D" parent="NavPoints" index="17"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 15, 5, 12.5)

[node name="Marker3D26" type="Marker3D" parent="NavPoints" index="18"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -15, 5, 12.5)

[node name="Marker3D27" type="Marker3D" parent="NavPoints" index="19"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -21, 5, 17.5)

[node name="Marker3D28" type="Marker3D" parent="NavPoints" index="20"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 21, 5, 17.5)

[node name="Marker3D29" type="Marker3D" parent="NavPoints" index="21"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 12.5, 0, 34)

[node name="Marker3D30" type="Marker3D" parent="NavPoints" index="22"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -12.5, 0, 34)

[node name="Marker3D31" type="Marker3D" parent="NavPoints" index="23"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -5, 0, 34)

[node name="Marker3D36" type="Marker3D" parent="NavPoints" index="24"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 5, 0, 34)

[node name="Marker3D32" type="Marker3D" parent="NavPoints" index="25"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -10, 0, 30)

[node name="Marker3D33" type="Marker3D" parent="NavPoints" index="26"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 10, 0, 30)

[node name="Marker3D34" type="Marker3D" parent="NavPoints" index="27"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 3, 0, 19)

[node name="Marker3D35" type="Marker3D" parent="NavPoints" index="28"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -3, 0, 19)

[node name="Marker3D2" type="Marker3D" parent="NavPoints" index="29"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 13.5)

[node name="Marker3D3" type="Marker3D" parent="NavPoints" index="30"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 5.5, 0, 5.5)

[node name="Marker3D4" type="Marker3D" parent="NavPoints" index="31"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -5.5, 0, 5.5)

[node name="Marker3D5" type="Marker3D" parent="NavPoints" index="32"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 5.5)

[node name="Marker3D6" type="Marker3D" parent="NavPoints" index="33"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -5.5)

[node name="Marker3D7" type="Marker3D" parent="NavPoints" index="34"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -12.5, 0, -0.5)

[node name="Marker3D8" type="Marker3D" parent="NavPoints" index="35"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 12.5, 0, -0.5)

[node name="Pistol1" parent="Pickups" index="0" instance=ExtResource("3_36e2o")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -9, 0.25, 2.5)
respawn_time = 20.0

[node name="Pistol2" parent="Pickups" index="1" instance=ExtResource("3_36e2o")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 9, 0.25, 2.5)
respawn_time = 20.0

[node name="Pistol3" parent="Pickups" index="2" instance=ExtResource("3_36e2o")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.25, 17.5)
respawn_time = 20.0

[node name="Pistol4" parent="Pickups" index="3" instance=ExtResource("3_36e2o")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -25, 5.25, -37)
respawn_time = 20.0

[node name="Pistol5" parent="Pickups" index="4" instance=ExtResource("3_36e2o")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 25, 5.25, -37)
respawn_time = 20.0

[node name="Pistol6" parent="Pickups" index="5" instance=ExtResource("3_36e2o")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.25, -20)
respawn_time = 20.0

[node name="Pistol7" parent="Pickups" index="6" instance=ExtResource("3_36e2o")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 22.25, 0.25, 35.25)

[node name="Pistol8" parent="Pickups" index="7" instance=ExtResource("3_36e2o")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -22.25, 0.25, 35.25)

[node name="SMG1" parent="Pickups" index="8" instance=ExtResource("3_36e2o")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 22, 0.25, 5)
weapon_type = 2
respawn_time = 45.0

[node name="SMG2" parent="Pickups" index="9" instance=ExtResource("3_36e2o")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -22, 0.25, 5)
weapon_type = 2
respawn_time = 45.0

[node name="Rifle1" parent="Pickups" index="10" instance=ExtResource("3_36e2o")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.25, 39.5)
weapon_type = 3
respawn_time = 45.0

[node name="Shotgun1" parent="Pickups" index="11" instance=ExtResource("3_36e2o")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.25, 0)
weapon_type = 4
respawn_time = 45.0

[node name="Sniper1" parent="Pickups" index="12" instance=ExtResource("3_36e2o")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 5.25, -41)
weapon_type = 3
respawn_time = 45.0

[node name="Health1" parent="Pickups" index="13" instance=ExtResource("4_f0cib")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -16, 0.25, 20)

[node name="Health2" parent="Pickups" index="14" instance=ExtResource("4_f0cib")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 16, 0.25, 20)

[node name="Health3" parent="Pickups" index="15" instance=ExtResource("4_f0cib")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -20.5, 5.25, -18.5)

[node name="Health4" parent="Pickups" index="16" instance=ExtResource("4_f0cib")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 20.5, 5.25, -18.5)

[node name="Armor1" parent="Pickups" index="17" instance=ExtResource("4_f0cib")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.25, 28.5)
health_type = 1
respawn_time = 45.0

[node name="Armor2" parent="Pickups" index="18" instance=ExtResource("4_f0cib")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.75, -27)
health_type = 1
respawn_time = 45.0

[node name="MusicPlayer" parent="." index="10"]
stream = ExtResource("7_ar8yn")
volume_db = -8.0
mix_target = 1
parameters/looping = true

[editable path="NavRegion/Goddess"]
